<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.21.1217.2252                               -->
<workbook original-version='18.1' source-build='2021.4.2 (20214.21.1217.2252)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='tableauintro_16431069970290' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='weight_height' inline='true' name='federated.18saos210x93mu1283qnz098axrw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='weight_height' name='textscan.1cqxr2q07guiiy1cvyj0n1dn98jk'>
            <connection class='textscan' directory='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/GitHub/cosferlabwork/Jupyter/Week2' filename='weight_height.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1cqxr2q07guiiy1cvyj0n1dn98jk' name='weight_height.csv' table='[weight_height#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='gender' ordinal='0' />
            <column datatype='integer' name='actual_weight' ordinal='1' />
            <column datatype='integer' name='actual_height' ordinal='2' />
            <column datatype='integer' name='reported_weight' ordinal='3' />
            <column datatype='integer' name='reported_height' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1cqxr2q07guiiy1cvyj0n1dn98jk' name='weight_height.csv' table='[weight_height#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='gender' ordinal='0' />
            <column datatype='integer' name='actual_weight' ordinal='1' />
            <column datatype='integer' name='actual_height' ordinal='2' />
            <column datatype='integer' name='reported_weight' ordinal='3' />
            <column datatype='integer' name='reported_height' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[weight_height.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[weight_height.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weight_height.csv_A9B764C2902847C682210E1C31F14631]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actual_weight</remote-name>
            <remote-type>20</remote-type>
            <local-name>[actual_weight]</local-name>
            <parent-name>[weight_height.csv]</parent-name>
            <remote-alias>actual_weight</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weight_height.csv_A9B764C2902847C682210E1C31F14631]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actual_height</remote-name>
            <remote-type>20</remote-type>
            <local-name>[actual_height]</local-name>
            <parent-name>[weight_height.csv]</parent-name>
            <remote-alias>actual_height</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weight_height.csv_A9B764C2902847C682210E1C31F14631]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reported_weight</remote-name>
            <remote-type>20</remote-type>
            <local-name>[reported_weight]</local-name>
            <parent-name>[weight_height.csv]</parent-name>
            <remote-alias>reported_weight</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weight_height.csv_A9B764C2902847C682210E1C31F14631]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reported_height</remote-name>
            <remote-type>20</remote-type>
            <local-name>[reported_height]</local-name>
            <parent-name>[weight_height.csv]</parent-name>
            <remote-alias>reported_height</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weight_height.csv_A9B764C2902847C682210E1C31F14631]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='weight_height.csv' datatype='table' name='[__tableau_internal_object_id__].[weight_height.csv_A9B764C2902847C682210E1C31F14631]' role='measure' type='quantitative' />
      <column caption='Actual Height' datatype='integer' name='[actual_height]' role='measure' type='quantitative' />
      <column caption='Actual Weight' datatype='integer' name='[actual_weight]' role='measure' type='quantitative' />
      <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
      <column caption='Reported Height' datatype='integer' name='[reported_height]' role='measure' type='quantitative' />
      <column caption='Reported Weight' datatype='integer' name='[reported_weight]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brazil&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='weight_height.csv' id='weight_height.csv_A9B764C2902847C682210E1C31F14631'>
            <properties context=''>
              <relation connection='textscan.1cqxr2q07guiiy1cvyj0n1dn98jk' name='weight_height.csv' table='[weight_height#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='gender' ordinal='0' />
                  <column datatype='integer' name='actual_weight' ordinal='1' />
                  <column datatype='integer' name='actual_height' ordinal='2' />
                  <column datatype='integer' name='reported_weight' ordinal='3' />
                  <column datatype='integer' name='reported_height' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Global Superstore' inline='true' name='federated.184r3at1toc0rh1caf0440ah8na2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global Superstore' name='excel-direct.1gqlmba0ihpcsy14nab1a0xnig6u'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/GitHub/cosferlabwork/Jupyter/Week2/Global Superstore.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='weight_height' name='textscan.1r9xaz91m31pjf13tfhh011f6eul'>
            <connection class='textscan' directory='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/GitHub/cosferlabwork/Jupyter/Week2' filename='weight_height.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1gqlmba0ihpcsy14nab1a0xnig6u' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Category' ordinal='0' />
            <column datatype='string' name='City' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='Customer Name' ordinal='3' />
            <column datatype='string' name='Market' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='date' name='Order Date' ordinal='6' />
            <column datatype='integer' name='Year (OrderDate)' ordinal='7' />
            <column datatype='string' name='Order ID' ordinal='8' />
            <column datatype='string' name='Order Priority' ordinal='9' />
            <column datatype='string' name='Product ID' ordinal='10' />
            <column datatype='string' name='Product Name' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='integer' name='Row ID' ordinal='13' />
            <column datatype='string' name='Segment' ordinal='14' />
            <column datatype='date' name='Ship Date' ordinal='15' />
            <column datatype='string' name='Ship Mode' ordinal='16' />
            <column datatype='string' name='State' ordinal='17' />
            <column datatype='string' name='Sub-Category' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
            <column datatype='integer' name='Quantity' ordinal='21' />
            <column datatype='real' name='Sales' ordinal='22' />
            <column datatype='real' name='Shipping Cost' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1gqlmba0ihpcsy14nab1a0xnig6u' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Category' ordinal='0' />
            <column datatype='string' name='City' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='Customer Name' ordinal='3' />
            <column datatype='string' name='Market' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='date' name='Order Date' ordinal='6' />
            <column datatype='integer' name='Year (OrderDate)' ordinal='7' />
            <column datatype='string' name='Order ID' ordinal='8' />
            <column datatype='string' name='Order Priority' ordinal='9' />
            <column datatype='string' name='Product ID' ordinal='10' />
            <column datatype='string' name='Product Name' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='integer' name='Row ID' ordinal='13' />
            <column datatype='string' name='Segment' ordinal='14' />
            <column datatype='date' name='Ship Date' ordinal='15' />
            <column datatype='string' name='Ship Mode' ordinal='16' />
            <column datatype='string' name='State' ordinal='17' />
            <column datatype='string' name='Sub-Category' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
            <column datatype='integer' name='Quantity' ordinal='21' />
            <column datatype='real' name='Sales' ordinal='22' />
            <column datatype='real' name='Shipping Cost' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year (OrderDate)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (OrderDate)]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Year (OrderDate)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>15</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year (OrderDate)]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_9863007C984A45D78964D5AF463FC95A]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Orders_9863007C984A45D78964D5AF463FC95A]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_9863007C984A45D78964D5AF463FC95A:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Shipping Cost]' derivation='Sum' name='[sum:Shipping Cost:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Inclusions (Country,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:State:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, State, City'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Raphael Costa/Documents/My Tableau Repository/Datasources/Global Superstore.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='01/25/2022 12:04:00 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Global Superstore' increment-value='%null%' refresh-type='create' rows-inserted='50943' timestamp-start='2022-01-25 12:03:55.027' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>0</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3918</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>245</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2299</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Market</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Market]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Market</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7751</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>6</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3112</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year (OrderDate)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year (OrderDate)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year (OrderDate)</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18083</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Priority</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order Priority]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Priority</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12270</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5797</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50943</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3394</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1490</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>42</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>20</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11610</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>21</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>22</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15478</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Shipping Cost</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Shipping Cost]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Shipping Cost</remote-alias>
              <ordinal>23</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8812</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_9863007C984A45D78964D5AF463FC95A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[Country]' filter-group='2'>
          <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
            <groupfilter function='level-members' level='[Country]' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[Country]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </groupfilter>
        </filter>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Ship Mode:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;First Class&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Standard Class&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Second Class&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Same Day&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;North Asia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EMEA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Southeast Asia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Shipping Cost:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.184r3at1toc0rh1caf0440ah8na2].[__tableau_internal_object_id__].[cnt:Orders_9863007C984A45D78964D5AF463FC95A:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Sales:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brazil&quot;' />
      </semantic-values>
      <filter class='categorical' column='[Country]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[Country]' member='&quot;Afghanistan&quot;' />
            <groupfilter function='member' level='[Country]' member='&quot;Albania&quot;' />
            <groupfilter function='member' level='[Country]' member='&quot;Algeria&quot;' />
            <groupfilter function='member' level='[Country]' member='&quot;Zimbabwe&quot;' />
          </groupfilter>
        </groupfilter>
      </filter>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_9863007C984A45D78964D5AF463FC95A'>
            <properties context=''>
              <relation connection='excel-direct.1gqlmba0ihpcsy14nab1a0xnig6u' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='2'>
                  <column datatype='string' name='Category' ordinal='0' />
                  <column datatype='string' name='City' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='Customer Name' ordinal='3' />
                  <column datatype='string' name='Market' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='date' name='Order Date' ordinal='6' />
                  <column datatype='integer' name='Year (OrderDate)' ordinal='7' />
                  <column datatype='string' name='Order ID' ordinal='8' />
                  <column datatype='string' name='Order Priority' ordinal='9' />
                  <column datatype='string' name='Product ID' ordinal='10' />
                  <column datatype='string' name='Product Name' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='integer' name='Row ID' ordinal='13' />
                  <column datatype='string' name='Segment' ordinal='14' />
                  <column datatype='date' name='Ship Date' ordinal='15' />
                  <column datatype='string' name='Ship Mode' ordinal='16' />
                  <column datatype='string' name='State' ordinal='17' />
                  <column datatype='string' name='Sub-Category' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                  <column datatype='integer' name='Quantity' ordinal='21' />
                  <column datatype='real' name='Sales' ordinal='22' />
                  <column datatype='real' name='Shipping Cost' ordinal='23' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='bubble'>
      <layout-options>
        <title>
          <formatted-text>
            <run>map of the avg(shipping cost) in the USA at state level
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore' name='federated.184r3at1toc0rh1caf0440ah8na2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.184r3at1toc0rh1caf0440ah8na2'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.184r3at1toc0rh1caf0440ah8na2].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.184r3at1toc0rh1caf0440ah8na2].[none:State:nk]' direction='DESC' using='[federated.184r3at1toc0rh1caf0440ah8na2].[avg:Sales:qk]' />
          <slices>
            <column>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.184r3at1toc0rh1caf0440ah8na2].[avg:Sales:qk]' />
              <text column='[federated.184r3at1toc0rh1caf0440ah8na2].[none:State:nk]' />
              <lod column='[federated.184r3at1toc0rh1caf0440ah8na2].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8102AC67-C040-48FE-B455-0D157373AC6C}' />
    </worksheet>
    <worksheet name='bubble2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>bubble - sales by category and sub category
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore' name='federated.184r3at1toc0rh1caf0440ah8na2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.184r3at1toc0rh1caf0440ah8na2'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.184r3at1toc0rh1caf0440ah8na2].[none:Category:nk]' />
              <size column='[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Sales:qk]' />
              <tooltip column='[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Profit:qk]' />
              <tooltip column='[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Quantity:qk]' />
              <text column='[federated.184r3at1toc0rh1caf0440ah8na2].[none:Sub-Category:nk]' />
              <text column='[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Sales:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#000000' fontsize='12'>For  &lt;</run>
                <run bold='true' fontcolor='#000000' fontsize='12'>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Category:nk]</run>
                <run bold='true' fontcolor='#000000' fontsize='12'>&gt; we sold &lt;</run>
                <run bold='true' fontcolor='#000000' fontsize='12'>[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Quantity:qk]</run>
                <run bold='true' fontcolor='#000000' fontsize='12'>&gt; items,  making $&lt;</run>
                <run bold='true' fontcolor='#000000' fontsize='12'>[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Profit:qk]</run>
                <run bold='true' fontcolor='#000000' fontsize='12'>&gt; profit on sales of $&lt;</run>
                <run bold='true' fontcolor='#000000' fontsize='12'>[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Sales:qk]</run>
                <run bold='true' fontcolor='#000000' fontsize='12'>&gt;.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0229BB57-B633-4D38-8717-91884991D1F0}' />
    </worksheet>
    <worksheet name='customers'>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore' name='federated.184r3at1toc0rh1caf0440ah8na2' />
          </datasources>
          <datasource-dependencies datasource='federated.184r3at1toc0rh1caf0440ah8na2'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Orders' datatype='integer' name='[__tableau_internal_object_id__].[Orders_9863007C984A45D78964D5AF463FC95A]' role='measure' type='quantitative' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_9863007C984A45D78964D5AF463FC95A]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_9863007C984A45D78964D5AF463FC95A]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_9863007C984A45D78964D5AF463FC95A:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.184r3at1toc0rh1caf0440ah8na2].[none:Customer Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Aaron Bergman&quot;</bucket>
              <bucket>&quot;Aaron Hawkins&quot;</bucket>
              <bucket>&quot;Aaron Smayling&quot;</bucket>
              <bucket>&quot;Adam Bellavance&quot;</bucket>
              <bucket>&quot;Adam Hart&quot;</bucket>
              <bucket>&quot;Adam Shillingsburg&quot;</bucket>
              <bucket>&quot;Adrian Barton&quot;</bucket>
              <bucket>&quot;Adrian Hane&quot;</bucket>
              <bucket>&quot;Adrian Shami&quot;</bucket>
              <bucket>&quot;Aimee Bixby&quot;</bucket>
              <bucket>&quot;Alan Barnes&quot;</bucket>
              <bucket>&quot;Alan Dominguez&quot;</bucket>
              <bucket>&quot;Alan Haines&quot;</bucket>
              <bucket>&quot;Alan Hwang&quot;</bucket>
              <bucket>&quot;Alan Schoenberger&quot;</bucket>
              <bucket>&quot;Alan Shonely&quot;</bucket>
              <bucket>&quot;Alejandro Ballentine&quot;</bucket>
              <bucket>&quot;Alejandro Grove&quot;</bucket>
              <bucket>&quot;Alejandro Savely&quot;</bucket>
              <bucket>&quot;Aleksandra Gannaway&quot;</bucket>
              <bucket>&quot;Alex Avila&quot;</bucket>
              <bucket>&quot;Alex Grayson&quot;</bucket>
              <bucket>&quot;Alex Russell&quot;</bucket>
              <bucket>&quot;Alice McCarthy&quot;</bucket>
              <bucket>&quot;Allen Armold&quot;</bucket>
              <bucket>&quot;Allen Goldenen&quot;</bucket>
              <bucket>&quot;Allen Rosenblatt&quot;</bucket>
              <bucket>&quot;Alyssa Crouse&quot;</bucket>
              <bucket>&quot;Alyssa Tate&quot;</bucket>
              <bucket>&quot;Amy Cox&quot;</bucket>
              <bucket>&quot;Amy Hunt&quot;</bucket>
              <bucket>&quot;Andrew Allen&quot;</bucket>
              <bucket>&quot;Andrew Gjertsen&quot;</bucket>
              <bucket>&quot;Andrew Roberts&quot;</bucket>
              <bucket>&quot;Andy Gerbode&quot;</bucket>
              <bucket>&quot;Andy Reiter&quot;</bucket>
              <bucket>&quot;Andy Yotov&quot;</bucket>
              <bucket>&quot;Anemone Ratner&quot;</bucket>
              <bucket>&quot;Angele Hood&quot;</bucket>
              <bucket>&quot;Ann Blume&quot;</bucket>
              <bucket>&quot;Ann Chong&quot;</bucket>
              <bucket>&quot;Ann Steele&quot;</bucket>
              <bucket>&quot;Anna Andreadi&quot;</bucket>
              <bucket>&quot;Anna Chung&quot;</bucket>
              <bucket>&quot;Anna Gayman&quot;</bucket>
              <bucket>&quot;Anna Häberlin&quot;</bucket>
              <bucket>&quot;Anne McFarland&quot;</bucket>
              <bucket>&quot;Anne Pryor&quot;</bucket>
              <bucket>&quot;Annie Thurman&quot;</bucket>
              <bucket>&quot;Annie Zypern&quot;</bucket>
              <bucket>&quot;Anthony Garverick&quot;</bucket>
              <bucket>&quot;Anthony Jacobs&quot;</bucket>
              <bucket>&quot;Anthony Johnson&quot;</bucket>
              <bucket>&quot;Anthony O&apos;Donnell&quot;</bucket>
              <bucket>&quot;Anthony Rawles&quot;</bucket>
              <bucket>&quot;Anthony Witt&quot;</bucket>
              <bucket>&quot;Arianne Irving&quot;</bucket>
              <bucket>&quot;Art Ferguson&quot;</bucket>
              <bucket>&quot;Art Foster&quot;</bucket>
              <bucket>&quot;Arthur Gainer&quot;</bucket>
              <bucket>&quot;Arthur Prichep&quot;</bucket>
              <bucket>&quot;Arthur Wiediger&quot;</bucket>
              <bucket>&quot;Ashley Jarboe&quot;</bucket>
              <bucket>&quot;Astrea Jones&quot;</bucket>
              <bucket>&quot;Barbara Fisher&quot;</bucket>
              <bucket>&quot;Barry Blumstein&quot;</bucket>
              <bucket>&quot;Barry Franz&quot;</bucket>
              <bucket>&quot;Barry Französisch&quot;</bucket>
              <bucket>&quot;Barry Gonzalez&quot;</bucket>
              <bucket>&quot;Barry Pond&quot;</bucket>
              <bucket>&quot;Barry Weirich&quot;</bucket>
              <bucket>&quot;Bart Folk&quot;</bucket>
              <bucket>&quot;Bart Pistole&quot;</bucket>
              <bucket>&quot;Bart Watters&quot;</bucket>
              <bucket>&quot;Becky Castell&quot;</bucket>
              <bucket>&quot;Becky Martin&quot;</bucket>
              <bucket>&quot;Becky Pak&quot;</bucket>
              <bucket>&quot;Ben Ferrer&quot;</bucket>
              <bucket>&quot;Ben Peterman&quot;</bucket>
              <bucket>&quot;Ben Wallace&quot;</bucket>
              <bucket>&quot;Benjamin Farhat&quot;</bucket>
              <bucket>&quot;Benjamin Patterson&quot;</bucket>
              <bucket>&quot;Benjamin Venier&quot;</bucket>
              <bucket>&quot;Berenike Kampe&quot;</bucket>
              <bucket>&quot;Beth Fritzler&quot;</bucket>
              <bucket>&quot;Beth Paige&quot;</bucket>
              <bucket>&quot;Beth Thompson&quot;</bucket>
              <bucket>&quot;Bill Donatelli&quot;</bucket>
              <bucket>&quot;Bill Eplett&quot;</bucket>
              <bucket>&quot;Bill Overfelt&quot;</bucket>
              <bucket>&quot;Bill Shonely&quot;</bucket>
              <bucket>&quot;Bill Stewart&quot;</bucket>
              <bucket>&quot;Bill Tyler&quot;</bucket>
              <bucket>&quot;Bobby Elias&quot;</bucket>
              <bucket>&quot;Bobby Odegard&quot;</bucket>
              <bucket>&quot;Bobby Trafton&quot;</bucket>
              <bucket>&quot;Brad Eason&quot;</bucket>
              <bucket>&quot;Brad Norvell&quot;</bucket>
              <bucket>&quot;Brad Thomas&quot;</bucket>
              <bucket>&quot;Bradley Drucker&quot;</bucket>
              <bucket>&quot;Bradley Nguyen&quot;</bucket>
              <bucket>&quot;Bradley Talbott&quot;</bucket>
              <bucket>&quot;Brenda Bowman&quot;</bucket>
              <bucket>&quot;Brendan Dodson&quot;</bucket>
              <bucket>&quot;Brendan Murry&quot;</bucket>
              <bucket>&quot;Brendan Sweed&quot;</bucket>
              <bucket>&quot;Brian Dahlen&quot;</bucket>
              <bucket>&quot;Brian DeCherney&quot;</bucket>
              <bucket>&quot;Brian Derr&quot;</bucket>
              <bucket>&quot;Brian Moss&quot;</bucket>
              <bucket>&quot;Brian Stugart&quot;</bucket>
              <bucket>&quot;Brian Thompson&quot;</bucket>
              <bucket>&quot;Brooke Gillingham&quot;</bucket>
              <bucket>&quot;Brosina Hoffman&quot;</bucket>
              <bucket>&quot;Bruce Degenhardt&quot;</bucket>
              <bucket>&quot;Bruce Geld&quot;</bucket>
              <bucket>&quot;Bruce Stewart&quot;</bucket>
              <bucket>&quot;Bryan Davis&quot;</bucket>
              <bucket>&quot;Bryan Mills&quot;</bucket>
              <bucket>&quot;Bryan Spruell&quot;</bucket>
              <bucket>&quot;Candace McMahon&quot;</bucket>
              <bucket>&quot;Cari MacIntyre&quot;</bucket>
              <bucket>&quot;Cari Sayre&quot;</bucket>
              <bucket>&quot;Cari Schnelling&quot;</bucket>
              <bucket>&quot;Carl Jackson&quot;</bucket>
              <bucket>&quot;Carl Ludwig&quot;</bucket>
              <bucket>&quot;Carl Weiss&quot;</bucket>
              <bucket>&quot;Carlos Daly&quot;</bucket>
              <bucket>&quot;Carlos Meador&quot;</bucket>
              <bucket>&quot;Carlos Soltero&quot;</bucket>
              <bucket>&quot;Carol Adams&quot;</bucket>
              <bucket>&quot;Carol Darley&quot;</bucket>
              <bucket>&quot;Carol Triggs&quot;</bucket>
              <bucket>&quot;Cassandra Brandow&quot;</bucket>
              <bucket>&quot;Caroline Jumper&quot;</bucket>
              <bucket>&quot;Catherine Glotzbach&quot;</bucket>
              <bucket>&quot;Cathy Armstrong&quot;</bucket>
              <bucket>&quot;Cathy Hwang&quot;</bucket>
              <bucket>&quot;Cathy Prescott&quot;</bucket>
              <bucket>&quot;Chad Cunningham&quot;</bucket>
              <bucket>&quot;Chad McGuire&quot;</bucket>
              <bucket>&quot;Chad Sievert&quot;</bucket>
              <bucket>&quot;Charles Crestani&quot;</bucket>
              <bucket>&quot;Charles McCrossin&quot;</bucket>
              <bucket>&quot;Charles Sheldon&quot;</bucket>
              <bucket>&quot;Charlotte Melton&quot;</bucket>
              <bucket>&quot;Chloris Kastensmidt&quot;</bucket>
              <bucket>&quot;Chris Cortes&quot;</bucket>
              <bucket>&quot;Chris McAfee&quot;</bucket>
              <bucket>&quot;Chris Selesnick&quot;</bucket>
              <bucket>&quot;Christina Anderson&quot;</bucket>
              <bucket>&quot;Christina DeMoss&quot;</bucket>
              <bucket>&quot;Christina VanderZanden&quot;</bucket>
              <bucket>&quot;Christine Abelman&quot;</bucket>
              <bucket>&quot;Christine Kargatis&quot;</bucket>
              <bucket>&quot;Christine Phan&quot;</bucket>
              <bucket>&quot;Christine Sundaresam&quot;</bucket>
              <bucket>&quot;Christopher Conant&quot;</bucket>
              <bucket>&quot;Christopher Martinez&quot;</bucket>
              <bucket>&quot;Christopher Schild&quot;</bucket>
              <bucket>&quot;Christy Brittain&quot;</bucket>
              <bucket>&quot;Chuck Clark&quot;</bucket>
              <bucket>&quot;Chuck Magee&quot;</bucket>
              <bucket>&quot;Chuck Sachs&quot;</bucket>
              <bucket>&quot;Cindy Chapman&quot;</bucket>
              <bucket>&quot;Cindy Schnelling&quot;</bucket>
              <bucket>&quot;Cindy Stewart&quot;</bucket>
              <bucket>&quot;Claire Gute&quot;</bucket>
              <bucket>&quot;Claudia Bergmann&quot;</bucket>
              <bucket>&quot;Clay Cheatham&quot;</bucket>
              <bucket>&quot;Clay Ludtke&quot;</bucket>
              <bucket>&quot;Clay Rozendal&quot;</bucket>
              <bucket>&quot;Clytie Kelty&quot;</bucket>
              <bucket>&quot;Corey Catlett&quot;</bucket>
              <bucket>&quot;Corey Roper&quot;</bucket>
              <bucket>&quot;Corey-Lock&quot;</bucket>
              <bucket>&quot;Corinna Mitchell&quot;</bucket>
              <bucket>&quot;Craig Carreira&quot;</bucket>
              <bucket>&quot;Craig Carroll&quot;</bucket>
              <bucket>&quot;Craig Leslie&quot;</bucket>
              <bucket>&quot;Craig Molinari&quot;</bucket>
              <bucket>&quot;Craig Reiter&quot;</bucket>
              <bucket>&quot;Craig Yedwab&quot;</bucket>
              <bucket>&quot;Cyma Kinney&quot;</bucket>
              <bucket>&quot;Cynthia Arntzen&quot;</bucket>
              <bucket>&quot;Cynthia Delaney&quot;</bucket>
              <bucket>&quot;Cynthia Voltz&quot;</bucket>
              <bucket>&quot;Cyra Reiten&quot;</bucket>
              <bucket>&quot;Damala Kotsonis&quot;</bucket>
              <bucket>&quot;Dan Campbell&quot;</bucket>
              <bucket>&quot;Dan Lawera&quot;</bucket>
              <bucket>&quot;Dan Reichenbach&quot;</bucket>
              <bucket>&quot;Dana Kaydos&quot;</bucket>
              <bucket>&quot;Daniel Byrd&quot;</bucket>
              <bucket>&quot;Daniel Lacy&quot;</bucket>
              <bucket>&quot;Daniel Raglin&quot;</bucket>
              <bucket>&quot;Dario Medina&quot;</bucket>
              <bucket>&quot;Darren Budd&quot;</bucket>
              <bucket>&quot;Darren Koutras&quot;</bucket>
              <bucket>&quot;Darren Powers&quot;</bucket>
              <bucket>&quot;Darrin Martin&quot;</bucket>
              <bucket>&quot;Darrin Sayre&quot;</bucket>
              <bucket>&quot;Darrin Van Huff&quot;</bucket>
              <bucket>&quot;Dave Brooks&quot;</bucket>
              <bucket>&quot;Dave Hallsten&quot;</bucket>
              <bucket>&quot;Dave Kipp&quot;</bucket>
              <bucket>&quot;Dave Poirier&quot;</bucket>
              <bucket>&quot;David Bremer&quot;</bucket>
              <bucket>&quot;David Flashing&quot;</bucket>
              <bucket>&quot;David Kendrick&quot;</bucket>
              <bucket>&quot;David Philippe&quot;</bucket>
              <bucket>&quot;David Smith&quot;</bucket>
              <bucket>&quot;David Wiener&quot;</bucket>
              <bucket>&quot;Dean Braden&quot;</bucket>
              <bucket>&quot;Dean Katz&quot;</bucket>
              <bucket>&quot;Dean percer&quot;</bucket>
              <bucket>&quot;Deanra Eno&quot;</bucket>
              <bucket>&quot;Deborah Brumfield&quot;</bucket>
              <bucket>&quot;Debra Catini&quot;</bucket>
              <bucket>&quot;Deirdre Greer&quot;</bucket>
              <bucket>&quot;Delfina Latchford&quot;</bucket>
              <bucket>&quot;Denise Leinenbach&quot;</bucket>
              <bucket>&quot;Denise Monton&quot;</bucket>
              <bucket>&quot;Dennis Bolton&quot;</bucket>
              <bucket>&quot;Dennis Kane&quot;</bucket>
              <bucket>&quot;Dennis Pardue&quot;</bucket>
              <bucket>&quot;Denny Blanton&quot;</bucket>
              <bucket>&quot;Denny Joy&quot;</bucket>
              <bucket>&quot;Denny Ordway&quot;</bucket>
              <bucket>&quot;Dianna Arnett&quot;</bucket>
              <bucket>&quot;Dianna Vittorini&quot;</bucket>
              <bucket>&quot;Dianna Wilson&quot;</bucket>
              <bucket>&quot;Dionis Lloyd&quot;</bucket>
              <bucket>&quot;Don Jones&quot;</bucket>
              <bucket>&quot;Don Miller&quot;</bucket>
              <bucket>&quot;Don Weiss&quot;</bucket>
              <bucket>&quot;Dorothy Badders&quot;</bucket>
              <bucket>&quot;Dorothy Dickinson&quot;</bucket>
              <bucket>&quot;Dorothy Wardle&quot;</bucket>
              <bucket>&quot;Dorris liebe&quot;</bucket>
              <bucket>&quot;Doug Bickford&quot;</bucket>
              <bucket>&quot;Doug Jacobs&quot;</bucket>
              <bucket>&quot;Doug O&apos;Connell&quot;</bucket>
              <bucket>&quot;Duane Benoit&quot;</bucket>
              <bucket>&quot;Duane Huffman&quot;</bucket>
              <bucket>&quot;Duane Noonan&quot;</bucket>
              <bucket>&quot;Ed Braxton&quot;</bucket>
              <bucket>&quot;Ed Jacobs&quot;</bucket>
              <bucket>&quot;Ed Ludwig&quot;</bucket>
              <bucket>&quot;Edward Becker&quot;</bucket>
              <bucket>&quot;Edward Hooks&quot;</bucket>
              <bucket>&quot;Edward Nazzal&quot;</bucket>
              <bucket>&quot;Eileen Kiefer&quot;</bucket>
              <bucket>&quot;Eleni McCrary&quot;</bucket>
              <bucket>&quot;Elizabeth Moffitt&quot;</bucket>
              <bucket>&quot;Ellis Ballard&quot;</bucket>
              <bucket>&quot;Elpida Rittenbach&quot;</bucket>
              <bucket>&quot;Emily Burns&quot;</bucket>
              <bucket>&quot;Emily Ducich&quot;</bucket>
              <bucket>&quot;Emily Grady&quot;</bucket>
              <bucket>&quot;Emily Phan&quot;</bucket>
              <bucket>&quot;Eric Barreto&quot;</bucket>
              <bucket>&quot;Eric Hoffmann&quot;</bucket>
              <bucket>&quot;Eric Murdock&quot;</bucket>
              <bucket>&quot;Erica Bern&quot;</bucket>
              <bucket>&quot;Erica Hackney&quot;</bucket>
              <bucket>&quot;Erica Hernandez&quot;</bucket>
              <bucket>&quot;Erica Smith&quot;</bucket>
              <bucket>&quot;Erin Ashbrook&quot;</bucket>
              <bucket>&quot;Erin Creighton&quot;</bucket>
              <bucket>&quot;Erin Mull&quot;</bucket>
              <bucket>&quot;Erin Smith&quot;</bucket>
              <bucket>&quot;Eudokia Martin&quot;</bucket>
              <bucket>&quot;Eugene Barchas&quot;</bucket>
              <bucket>&quot;Eugene Hildebrand&quot;</bucket>
              <bucket>&quot;Eugene Moren&quot;</bucket>
              <bucket>&quot;Eva Jacobs&quot;</bucket>
              <bucket>&quot;Evan Bailliet&quot;</bucket>
              <bucket>&quot;Evan Henry&quot;</bucket>
              <bucket>&quot;Evan Minnotte&quot;</bucket>
              <bucket>&quot;Filia McAdams&quot;</bucket>
              <bucket>&quot;Frank Atkinson&quot;</bucket>
              <bucket>&quot;Frank Carlisle&quot;</bucket>
              <bucket>&quot;Frank Gastineau&quot;</bucket>
              <bucket>&quot;Frank Hawley&quot;</bucket>
              <bucket>&quot;Frank Merwin&quot;</bucket>
              <bucket>&quot;Frank Olsen&quot;</bucket>
              <bucket>&quot;Frank Preis&quot;</bucket>
              <bucket>&quot;Fred Chung&quot;</bucket>
              <bucket>&quot;Fred Harton&quot;</bucket>
              <bucket>&quot;Fred Hopkins&quot;</bucket>
              <bucket>&quot;Fred McMath&quot;</bucket>
              <bucket>&quot;Fred Wasserman&quot;</bucket>
              <bucket>&quot;Gary Hansen&quot;</bucket>
              <bucket>&quot;Gary Hwang&quot;</bucket>
              <bucket>&quot;Gary McGarr&quot;</bucket>
              <bucket>&quot;Gary Mitchum&quot;</bucket>
              <bucket>&quot;Gary Zandusky&quot;</bucket>
              <bucket>&quot;Gene Hale&quot;</bucket>
              <bucket>&quot;Gene McClure&quot;</bucket>
              <bucket>&quot;George Ashbrook&quot;</bucket>
              <bucket>&quot;George Bell&quot;</bucket>
              <bucket>&quot;George Zrebassa&quot;</bucket>
              <bucket>&quot;Georgia Rosenberg&quot;</bucket>
              <bucket>&quot;Giulietta Baptist&quot;</bucket>
              <bucket>&quot;Giulietta Dortch&quot;</bucket>
              <bucket>&quot;Giulietta Weimer&quot;</bucket>
              <bucket>&quot;Grace Kelly&quot;</bucket>
              <bucket>&quot;Grant Thornton&quot;</bucket>
              <bucket>&quot;Greg Guthrie&quot;</bucket>
              <bucket>&quot;Greg Hansen&quot;</bucket>
              <bucket>&quot;Greg Matthias&quot;</bucket>
              <bucket>&quot;Greg Maxwell&quot;</bucket>
              <bucket>&quot;Greg Tran&quot;</bucket>
              <bucket>&quot;Guy Armstrong&quot;</bucket>
              <bucket>&quot;Guy Phonely&quot;</bucket>
              <bucket>&quot;Guy Thornton&quot;</bucket>
              <bucket>&quot;Hallie Redmond&quot;</bucket>
              <bucket>&quot;Harold Dahlen&quot;</bucket>
              <bucket>&quot;Harold Engle&quot;</bucket>
              <bucket>&quot;Harold Pawlan&quot;</bucket>
              <bucket>&quot;Harold Ryan&quot;</bucket>
              <bucket>&quot;Harry Greene&quot;</bucket>
              <bucket>&quot;Harry Marie&quot;</bucket>
              <bucket>&quot;Heather Jas&quot;</bucket>
              <bucket>&quot;Heather Kirkland&quot;</bucket>
              <bucket>&quot;Helen Abelman&quot;</bucket>
              <bucket>&quot;Helen Andreada&quot;</bucket>
              <bucket>&quot;Helen Wasserman&quot;</bucket>
              <bucket>&quot;Henia Zydlo&quot;</bucket>
              <bucket>&quot;Henry Goldwyn&quot;</bucket>
              <bucket>&quot;Henry MacAllister&quot;</bucket>
              <bucket>&quot;Herbert Flentye&quot;</bucket>
              <bucket>&quot;Hilary Holden&quot;</bucket>
              <bucket>&quot;Hunter Glantz&quot;</bucket>
              <bucket>&quot;Hunter Lopez&quot;</bucket>
              <bucket>&quot;Ionia McGrath&quot;</bucket>
              <bucket>&quot;Irene Maddox&quot;</bucket>
              <bucket>&quot;Ivan Gibson&quot;</bucket>
              <bucket>&quot;Ivan Liston&quot;</bucket>
              <bucket>&quot;Jack Garza&quot;</bucket>
              <bucket>&quot;Jack Lebron&quot;</bucket>
              <bucket>&quot;Jack O&apos;Briant&quot;</bucket>
              <bucket>&quot;James Galang&quot;</bucket>
              <bucket>&quot;James Lanier&quot;</bucket>
              <bucket>&quot;Jamie Frazer&quot;</bucket>
              <bucket>&quot;Jamie Kunitz&quot;</bucket>
              <bucket>&quot;Jane Waco&quot;</bucket>
              <bucket>&quot;Janet Lee&quot;</bucket>
              <bucket>&quot;Janet Martin&quot;</bucket>
              <bucket>&quot;Janet Molinari&quot;</bucket>
              <bucket>&quot;Jas O&apos;Carroll&quot;</bucket>
              <bucket>&quot;Jason Fortune-&quot;</bucket>
              <bucket>&quot;Jason Gross&quot;</bucket>
              <bucket>&quot;Jason Klamczynski&quot;</bucket>
              <bucket>&quot;Jasper Cacioppo&quot;</bucket>
              <bucket>&quot;Jay Fein&quot;</bucket>
              <bucket>&quot;Jay Kimmel&quot;</bucket>
              <bucket>&quot;Jenna Caffey&quot;</bucket>
              <bucket>&quot;Jennifer Braxton&quot;</bucket>
              <bucket>&quot;Jennifer Ferguson&quot;</bucket>
              <bucket>&quot;Jennifer Halladay&quot;</bucket>
              <bucket>&quot;Jennifer Jackson&quot;</bucket>
              <bucket>&quot;Jennifer Patt&quot;</bucket>
              <bucket>&quot;Jeremy Ellison&quot;</bucket>
              <bucket>&quot;Jeremy Farry&quot;</bucket>
              <bucket>&quot;Jeremy Lonsdale&quot;</bucket>
              <bucket>&quot;Jeremy Pistek&quot;</bucket>
              <bucket>&quot;Jessica Myrick&quot;</bucket>
              <bucket>&quot;Jesus Ocampo&quot;</bucket>
              <bucket>&quot;Jill Fjeld&quot;</bucket>
              <bucket>&quot;Jill Matthias&quot;</bucket>
              <bucket>&quot;Jill Stevenson&quot;</bucket>
              <bucket>&quot;Jim Epp&quot;</bucket>
              <bucket>&quot;Jim Karlsson&quot;</bucket>
              <bucket>&quot;Jim Kriz&quot;</bucket>
              <bucket>&quot;Jim Mitchum&quot;</bucket>
              <bucket>&quot;Jim Radford&quot;</bucket>
              <bucket>&quot;Jim Sink&quot;</bucket>
              <bucket>&quot;Jocasta Rupert&quot;</bucket>
              <bucket>&quot;Joe Elijah&quot;</bucket>
              <bucket>&quot;Joe Kamberova&quot;</bucket>
              <bucket>&quot;Joel Eaton&quot;</bucket>
              <bucket>&quot;Joel Jenkins&quot;</bucket>
              <bucket>&quot;John Castell&quot;</bucket>
              <bucket>&quot;John Dryer&quot;</bucket>
              <bucket>&quot;John Grady&quot;</bucket>
              <bucket>&quot;John Huston&quot;</bucket>
              <bucket>&quot;John Lee&quot;</bucket>
              <bucket>&quot;John Lucas&quot;</bucket>
              <bucket>&quot;John Murray&quot;</bucket>
              <bucket>&quot;John Stevenson&quot;</bucket>
              <bucket>&quot;Jonathan Doherty&quot;</bucket>
              <bucket>&quot;Jonathan Howell&quot;</bucket>
              <bucket>&quot;Joni Blumstein&quot;</bucket>
              <bucket>&quot;Joni Sundaresam&quot;</bucket>
              <bucket>&quot;Joni Wasserman&quot;</bucket>
              <bucket>&quot;Joseph Airdo&quot;</bucket>
              <bucket>&quot;Joseph Holt&quot;</bucket>
              <bucket>&quot;Joy Bell-&quot;</bucket>
              <bucket>&quot;Joy Daniels&quot;</bucket>
              <bucket>&quot;Joy Smith&quot;</bucket>
              <bucket>&quot;Julia Barnett&quot;</bucket>
              <bucket>&quot;Julia Dunbar&quot;</bucket>
              <bucket>&quot;Julia West&quot;</bucket>
              <bucket>&quot;Juliana Krohn&quot;</bucket>
              <bucket>&quot;Julie Creighton&quot;</bucket>
              <bucket>&quot;Julie Kriz&quot;</bucket>
              <bucket>&quot;Julie Prescott&quot;</bucket>
              <bucket>&quot;Justin Deggeller&quot;</bucket>
              <bucket>&quot;Justin Ellison&quot;</bucket>
              <bucket>&quot;Justin Hirsh&quot;</bucket>
              <bucket>&quot;Justin MacKendrick&quot;</bucket>
              <bucket>&quot;Justin Ritter&quot;</bucket>
              <bucket>&quot;Kalyca Meade&quot;</bucket>
              <bucket>&quot;Karen Bern&quot;</bucket>
              <bucket>&quot;Karen Carlisle&quot;</bucket>
              <bucket>&quot;Karen Daniels&quot;</bucket>
              <bucket>&quot;Karen Ferguson&quot;</bucket>
              <bucket>&quot;Karen Seio&quot;</bucket>
              <bucket>&quot;Karl Braun&quot;</bucket>
              <bucket>&quot;Katharine Harms&quot;</bucket>
              <bucket>&quot;Katherine Ducich&quot;</bucket>
              <bucket>&quot;Katherine Hughes&quot;</bucket>
              <bucket>&quot;Katherine Murray&quot;</bucket>
              <bucket>&quot;Katherine Nockton&quot;</bucket>
              <bucket>&quot;Katrina Bavinger&quot;</bucket>
              <bucket>&quot;Katrina Edelman&quot;</bucket>
              <bucket>&quot;Katrina Willman&quot;</bucket>
              <bucket>&quot;Kean Nguyen&quot;</bucket>
              <bucket>&quot;Kean Takahito&quot;</bucket>
              <bucket>&quot;Kean Thornton&quot;</bucket>
              <bucket>&quot;Keith Dawkins&quot;</bucket>
              <bucket>&quot;Keith Herrera&quot;</bucket>
              <bucket>&quot;Kelly Andreada&quot;</bucket>
              <bucket>&quot;Kelly Collister&quot;</bucket>
              <bucket>&quot;Kelly Lampkin&quot;</bucket>
              <bucket>&quot;Kelly Williams&quot;</bucket>
              <bucket>&quot;Ken Black&quot;</bucket>
              <bucket>&quot;Ken Brennan&quot;</bucket>
              <bucket>&quot;Ken Dana&quot;</bucket>
              <bucket>&quot;Ken Heidel&quot;</bucket>
              <bucket>&quot;Ken Lonsdale&quot;</bucket>
              <bucket>&quot;Khloe Miller&quot;</bucket>
              <bucket>&quot;Kimberly Carter&quot;</bucket>
              <bucket>&quot;Kristen Hastings&quot;</bucket>
              <bucket>&quot;Kristina Nunn&quot;</bucket>
              <bucket>&quot;Kunst Miller&quot;</bucket>
              <bucket>&quot;Larry Blacks&quot;</bucket>
              <bucket>&quot;Larry Hughes&quot;</bucket>
              <bucket>&quot;Larry Tron&quot;</bucket>
              <bucket>&quot;Laura Armstrong&quot;</bucket>
              <bucket>&quot;Laurel Beltran&quot;</bucket>
              <bucket>&quot;Laurel Elliston&quot;</bucket>
              <bucket>&quot;Laurel Workman&quot;</bucket>
              <bucket>&quot;Lauren Leatherbury&quot;</bucket>
              <bucket>&quot;Lela Donovan&quot;</bucket>
              <bucket>&quot;Lena Cacioppo&quot;</bucket>
              <bucket>&quot;Lena Creighton&quot;</bucket>
              <bucket>&quot;Lena Hernandez&quot;</bucket>
              <bucket>&quot;Lena Radford&quot;</bucket>
              <bucket>&quot;Linda Cazamias&quot;</bucket>
              <bucket>&quot;Linda Southworth&quot;</bucket>
              <bucket>&quot;Lindsay Castell&quot;</bucket>
              <bucket>&quot;Lindsay Shagiari&quot;</bucket>
              <bucket>&quot;Lindsay Williams&quot;</bucket>
              <bucket>&quot;Lisa DeCherney&quot;</bucket>
              <bucket>&quot;Lisa Hazard&quot;</bucket>
              <bucket>&quot;Lisa Ryan&quot;</bucket>
              <bucket>&quot;Liz Carlisle&quot;</bucket>
              <bucket>&quot;Liz MacKendrick&quot;</bucket>
              <bucket>&quot;Liz Pelletier&quot;</bucket>
              <bucket>&quot;Liz Preis&quot;</bucket>
              <bucket>&quot;Liz Thompson&quot;</bucket>
              <bucket>&quot;Liz Willingham&quot;</bucket>
              <bucket>&quot;Logan Currie&quot;</bucket>
              <bucket>&quot;Logan Haushalter&quot;</bucket>
              <bucket>&quot;Lori Olson&quot;</bucket>
              <bucket>&quot;Luke Foster&quot;</bucket>
              <bucket>&quot;Luke Schmidt&quot;</bucket>
              <bucket>&quot;Luke Weiss&quot;</bucket>
              <bucket>&quot;Lycoris Saunders&quot;</bucket>
              <bucket>&quot;Lynn Smith&quot;</bucket>
              <bucket>&quot;Magdelene Morse&quot;</bucket>
              <bucket>&quot;Marc Crier&quot;</bucket>
              <bucket>&quot;Marc Harrigan&quot;</bucket>
              <bucket>&quot;Maria Bertelson&quot;</bucket>
              <bucket>&quot;Maria Etezadi&quot;</bucket>
              <bucket>&quot;Maria Zettner&quot;</bucket>
              <bucket>&quot;Maribeth Dona&quot;</bucket>
              <bucket>&quot;Maribeth Schnelling&quot;</bucket>
              <bucket>&quot;Maribeth Yedwab&quot;</bucket>
              <bucket>&quot;Marina Lichtenstein&quot;</bucket>
              <bucket>&quot;Maris LaWare&quot;</bucket>
              <bucket>&quot;Mark Cousins&quot;</bucket>
              <bucket>&quot;Mark Haberlin&quot;</bucket>
              <bucket>&quot;Mark Hamilton&quot;</bucket>
              <bucket>&quot;Mark Packer&quot;</bucket>
              <bucket>&quot;Mark Van Huff&quot;</bucket>
              <bucket>&quot;Mary O&apos;Rourke&quot;</bucket>
              <bucket>&quot;Mary Zewe&quot;</bucket>
              <bucket>&quot;MaryBeth Skach&quot;</bucket>
              <bucket>&quot;Mathew Reese&quot;</bucket>
              <bucket>&quot;Matt Abelman&quot;</bucket>
              <bucket>&quot;Matt Collins&quot;</bucket>
              <bucket>&quot;Matt Collister&quot;</bucket>
              <bucket>&quot;Matt Connell&quot;</bucket>
              <bucket>&quot;Matt Hagelstein&quot;</bucket>
              <bucket>&quot;Matthew Clasen&quot;</bucket>
              <bucket>&quot;Matthew Grinstein&quot;</bucket>
              <bucket>&quot;Maureen Fritzler&quot;</bucket>
              <bucket>&quot;Maureen Gastineau&quot;</bucket>
              <bucket>&quot;Maureen Gnade&quot;</bucket>
              <bucket>&quot;Maurice Satty&quot;</bucket>
              <bucket>&quot;Max Engle&quot;</bucket>
              <bucket>&quot;Max Jones&quot;</bucket>
              <bucket>&quot;Max Ludwig&quot;</bucket>
              <bucket>&quot;Maxwell Schwartz&quot;</bucket>
              <bucket>&quot;Maya Herman&quot;</bucket>
              <bucket>&quot;Meg O&apos;Connel&quot;</bucket>
              <bucket>&quot;Meg Tillman&quot;</bucket>
              <bucket>&quot;Melanie Seite&quot;</bucket>
              <bucket>&quot;Michael Chen&quot;</bucket>
              <bucket>&quot;Michael Dominguez&quot;</bucket>
              <bucket>&quot;Michael Grace&quot;</bucket>
              <bucket>&quot;Michael Granlund&quot;</bucket>
              <bucket>&quot;Michael Kennedy&quot;</bucket>
              <bucket>&quot;Michael Moore&quot;</bucket>
              <bucket>&quot;Michael Nguyen&quot;</bucket>
              <bucket>&quot;Michael Oakman&quot;</bucket>
              <bucket>&quot;Michael Paige&quot;</bucket>
              <bucket>&quot;Michael Stewart&quot;</bucket>
              <bucket>&quot;Michelle Arnett&quot;</bucket>
              <bucket>&quot;Michelle Ellison&quot;</bucket>
              <bucket>&quot;Michelle Huthwaite&quot;</bucket>
              <bucket>&quot;Michelle Lonsdale&quot;</bucket>
              <bucket>&quot;Michelle Moray&quot;</bucket>
              <bucket>&quot;Michelle Tran&quot;</bucket>
              <bucket>&quot;Mick Brown&quot;</bucket>
              <bucket>&quot;Mick Crebagga&quot;</bucket>
              <bucket>&quot;Mick Hernandez&quot;</bucket>
              <bucket>&quot;Mike Caudle&quot;</bucket>
              <bucket>&quot;Mike Gockenbach&quot;</bucket>
              <bucket>&quot;Mike Kennedy&quot;</bucket>
              <bucket>&quot;Mike Pelletier&quot;</bucket>
              <bucket>&quot;Mike Vittorini&quot;</bucket>
              <bucket>&quot;Mitch Gastineau&quot;</bucket>
              <bucket>&quot;Mitch Webber&quot;</bucket>
              <bucket>&quot;Mitch Willingham&quot;</bucket>
              <bucket>&quot;Monica Federle&quot;</bucket>
              <bucket>&quot;Muhammed Lee&quot;</bucket>
              <bucket>&quot;Muhammed MacIntyre&quot;</bucket>
              <bucket>&quot;Muhammed Yedwab&quot;</bucket>
              <bucket>&quot;Nancy Lomonaco&quot;</bucket>
              <bucket>&quot;Naresj Patel&quot;</bucket>
              <bucket>&quot;Nat Carroll&quot;</bucket>
              <bucket>&quot;Nat Gilpin&quot;</bucket>
              <bucket>&quot;Natalie DeCherney&quot;</bucket>
              <bucket>&quot;Natalie Fritzler&quot;</bucket>
              <bucket>&quot;Natalie Webber&quot;</bucket>
              <bucket>&quot;Nathan Cano&quot;</bucket>
              <bucket>&quot;Nathan Gelder&quot;</bucket>
              <bucket>&quot;Nathan Mautz&quot;</bucket>
              <bucket>&quot;Neil Ducich&quot;</bucket>
              <bucket>&quot;Neil Französisch&quot;</bucket>
              <bucket>&quot;Neil Knudson&quot;</bucket>
              <bucket>&quot;Neola Schneider&quot;</bucket>
              <bucket>&quot;Neoma Murray&quot;</bucket>
              <bucket>&quot;Nick Crebassa&quot;</bucket>
              <bucket>&quot;Nick Radford&quot;</bucket>
              <bucket>&quot;Nick Zandusky&quot;</bucket>
              <bucket>&quot;Nicole Brennan&quot;</bucket>
              <bucket>&quot;Nicole Fjeld&quot;</bucket>
              <bucket>&quot;Nicole Hansen&quot;</bucket>
              <bucket>&quot;Noah Childs&quot;</bucket>
              <bucket>&quot;Noel Staavos&quot;</bucket>
              <bucket>&quot;Nona Balk&quot;</bucket>
              <bucket>&quot;Nora Paige&quot;</bucket>
              <bucket>&quot;Nora Pelletier&quot;</bucket>
              <bucket>&quot;Nora Preis&quot;</bucket>
              <bucket>&quot;Odella Nelson&quot;</bucket>
              <bucket>&quot;Olvera Toch&quot;</bucket>
              <bucket>&quot;Pamela Coakley&quot;</bucket>
              <bucket>&quot;Pamela Stobb&quot;</bucket>
              <bucket>&quot;Parhena Norris&quot;</bucket>
              <bucket>&quot;Patricia Hirasaki&quot;</bucket>
              <bucket>&quot;Patrick Bzostek&quot;</bucket>
              <bucket>&quot;Patrick Gardner&quot;</bucket>
              <bucket>&quot;Patrick Jones&quot;</bucket>
              <bucket>&quot;Patrick O&apos;Brill&quot;</bucket>
              <bucket>&quot;Patrick O&apos;Donnell&quot;</bucket>
              <bucket>&quot;Patrick Ryan&quot;</bucket>
              <bucket>&quot;Paul Gonzalez&quot;</bucket>
              <bucket>&quot;Paul Knutson&quot;</bucket>
              <bucket>&quot;Paul Lucas&quot;</bucket>
              <bucket>&quot;Paul MacIntyre&quot;</bucket>
              <bucket>&quot;Paul Prost&quot;</bucket>
              <bucket>&quot;Paul Stevenson&quot;</bucket>
              <bucket>&quot;Paul Van Hugh&quot;</bucket>
              <bucket>&quot;Pauline Chand&quot;</bucket>
              <bucket>&quot;Pauline Johnson&quot;</bucket>
              <bucket>&quot;Pauline Webber&quot;</bucket>
              <bucket>&quot;Penelope Sewall&quot;</bucket>
              <bucket>&quot;Pete Armstrong&quot;</bucket>
              <bucket>&quot;Pete Kriz&quot;</bucket>
              <bucket>&quot;Pete Takahito&quot;</bucket>
              <bucket>&quot;Peter Bühler&quot;</bucket>
              <bucket>&quot;Peter Fuller&quot;</bucket>
              <bucket>&quot;Peter McVee&quot;</bucket>
              <bucket>&quot;Philip Brown&quot;</bucket>
              <bucket>&quot;Philip Fox&quot;</bucket>
              <bucket>&quot;Philisse Overcash&quot;</bucket>
              <bucket>&quot;Phillina Ober&quot;</bucket>
              <bucket>&quot;Phillip Breyer&quot;</bucket>
              <bucket>&quot;Phillip Flathmann&quot;</bucket>
              <bucket>&quot;Pierre Wener&quot;</bucket>
              <bucket>&quot;Quincy Jones&quot;</bucket>
              <bucket>&quot;Rachel Payne&quot;</bucket>
              <bucket>&quot;Ralph Arnett&quot;</bucket>
              <bucket>&quot;Ralph Kennedy&quot;</bucket>
              <bucket>&quot;Ralph Ritter&quot;</bucket>
              <bucket>&quot;Randy Bradley&quot;</bucket>
              <bucket>&quot;Randy Ferguson&quot;</bucket>
              <bucket>&quot;Raymond Buch&quot;</bucket>
              <bucket>&quot;Raymond Messe&quot;</bucket>
              <bucket>&quot;Resi Pölking&quot;</bucket>
              <bucket>&quot;Ricardo Emerson&quot;</bucket>
              <bucket>&quot;Ricardo Sperren&quot;</bucket>
              <bucket>&quot;Richard Bierner&quot;</bucket>
              <bucket>&quot;Richard Eichhorn&quot;</bucket>
              <bucket>&quot;Rick Bensley&quot;</bucket>
              <bucket>&quot;Rick Duston&quot;</bucket>
              <bucket>&quot;Rick Hansen&quot;</bucket>
              <bucket>&quot;Rick Huthwaite&quot;</bucket>
              <bucket>&quot;Rick Reed&quot;</bucket>
              <bucket>&quot;Rick Wilson&quot;</bucket>
              <bucket>&quot;Ritsa Hightower&quot;</bucket>
              <bucket>&quot;Rob Beeghly&quot;</bucket>
              <bucket>&quot;Rob Dowd&quot;</bucket>
              <bucket>&quot;Rob Haberlin&quot;</bucket>
              <bucket>&quot;Rob Lucas&quot;</bucket>
              <bucket>&quot;Rob Williams&quot;</bucket>
              <bucket>&quot;Robert Barroso&quot;</bucket>
              <bucket>&quot;Robert Dilbeck&quot;</bucket>
              <bucket>&quot;Robert Marley&quot;</bucket>
              <bucket>&quot;Robert Waldorf&quot;</bucket>
              <bucket>&quot;Roger Barcio&quot;</bucket>
              <bucket>&quot;Roger Demir&quot;</bucket>
              <bucket>&quot;Roland Fjeld&quot;</bucket>
              <bucket>&quot;Roland Murray&quot;</bucket>
              <bucket>&quot;Roland Schwarz&quot;</bucket>
              <bucket>&quot;Rose O&apos;Brian&quot;</bucket>
              <bucket>&quot;Ross Baird&quot;</bucket>
              <bucket>&quot;Ross DeVincentis&quot;</bucket>
              <bucket>&quot;Roy Collins&quot;</bucket>
              <bucket>&quot;Roy Französisch&quot;</bucket>
              <bucket>&quot;Roy Phan&quot;</bucket>
              <bucket>&quot;Roy Skaria&quot;</bucket>
              <bucket>&quot;Ruben Ausman&quot;</bucket>
              <bucket>&quot;Ruben Dartt&quot;</bucket>
              <bucket>&quot;Russell Applegate&quot;</bucket>
              <bucket>&quot;Russell D&apos;Ascenzo&quot;</bucket>
              <bucket>&quot;Ryan Akin&quot;</bucket>
              <bucket>&quot;Ryan Crowe&quot;</bucket>
              <bucket>&quot;Sally Hughsby&quot;</bucket>
              <bucket>&quot;Sally Knutson&quot;</bucket>
              <bucket>&quot;Sally Matthias&quot;</bucket>
              <bucket>&quot;Sam Craven&quot;</bucket>
              <bucket>&quot;Sam Zeldin&quot;</bucket>
              <bucket>&quot;Sample Company A&quot;</bucket>
              <bucket>&quot;Sandra Flanagan&quot;</bucket>
              <bucket>&quot;Sandra Glassco&quot;</bucket>
              <bucket>&quot;Sanjit Chand&quot;</bucket>
              <bucket>&quot;Sanjit Engle&quot;</bucket>
              <bucket>&quot;Sanjit Jacobs&quot;</bucket>
              <bucket>&quot;Saphhira Shifley&quot;</bucket>
              <bucket>&quot;Sara Luxemburg&quot;</bucket>
              <bucket>&quot;Sarah Bern&quot;</bucket>
              <bucket>&quot;Sarah Brown&quot;</bucket>
              <bucket>&quot;Sarah Foster&quot;</bucket>
              <bucket>&quot;Sarah Jordon&quot;</bucket>
              <bucket>&quot;Scot Coram&quot;</bucket>
              <bucket>&quot;Scot Wooten&quot;</bucket>
              <bucket>&quot;Scott Cohen&quot;</bucket>
              <bucket>&quot;Scott Williamson&quot;</bucket>
              <bucket>&quot;Sean Braxton&quot;</bucket>
              <bucket>&quot;Sean Christensen&quot;</bucket>
              <bucket>&quot;Sean Miller&quot;</bucket>
              <bucket>&quot;Sean O&apos;Donnell&quot;</bucket>
              <bucket>&quot;Sean Wendt&quot;</bucket>
              <bucket>&quot;Seth Vernon&quot;</bucket>
              <bucket>&quot;Shahid Collister&quot;</bucket>
              <bucket>&quot;Shahid Hopkins&quot;</bucket>
              <bucket>&quot;Shahid Shariari&quot;</bucket>
              <bucket>&quot;Sharelle Roach&quot;</bucket>
              <bucket>&quot;Shaun Chance&quot;</bucket>
              <bucket>&quot;Shaun Weien&quot;</bucket>
              <bucket>&quot;Sheri Gordon&quot;</bucket>
              <bucket>&quot;Shirley Daniels&quot;</bucket>
              <bucket>&quot;Shirley Jackson&quot;</bucket>
              <bucket>&quot;Shirley Schmidt&quot;</bucket>
              <bucket>&quot;Shui Tom&quot;</bucket>
              <bucket>&quot;Sibella Parks&quot;</bucket>
              <bucket>&quot;Skye Norling&quot;</bucket>
              <bucket>&quot;Sonia Cooley&quot;</bucket>
              <bucket>&quot;Sonia Sunley&quot;</bucket>
              <bucket>&quot;Speros Goranitis&quot;</bucket>
              <bucket>&quot;Stefania Perrino&quot;</bucket>
              <bucket>&quot;Stefanie Holloman&quot;</bucket>
              <bucket>&quot;Stephanie Phelps&quot;</bucket>
              <bucket>&quot;Stephanie Ulpright&quot;</bucket>
              <bucket>&quot;Steve Carroll&quot;</bucket>
              <bucket>&quot;Steve Chapman&quot;</bucket>
              <bucket>&quot;Steve Nguyen&quot;</bucket>
              <bucket>&quot;Steven Cartwright&quot;</bucket>
              <bucket>&quot;Steven Roelle&quot;</bucket>
              <bucket>&quot;Steven Ward&quot;</bucket>
              <bucket>&quot;Stewart Carmichael&quot;</bucket>
              <bucket>&quot;Stewart Visinsky&quot;</bucket>
              <bucket>&quot;Stuart Calhoun&quot;</bucket>
              <bucket>&quot;Stuart Van&quot;</bucket>
              <bucket>&quot;Sue Ann Reed&quot;</bucket>
              <bucket>&quot;Sung Chung&quot;</bucket>
              <bucket>&quot;Sung Pak&quot;</bucket>
              <bucket>&quot;Sung Shariari&quot;</bucket>
              <bucket>&quot;Susan Gilcrest&quot;</bucket>
              <bucket>&quot;Susan MacKendrick&quot;</bucket>
              <bucket>&quot;Susan Pistek&quot;</bucket>
              <bucket>&quot;Susan Vittorini&quot;</bucket>
              <bucket>&quot;Suzanne McNair&quot;</bucket>
              <bucket>&quot;Sylvia Foulston&quot;</bucket>
              <bucket>&quot;Tamara Chand&quot;</bucket>
              <bucket>&quot;Tamara Dahlen&quot;</bucket>
              <bucket>&quot;Tamara Manning&quot;</bucket>
              <bucket>&quot;Tamara Willingham&quot;</bucket>
              <bucket>&quot;Tanja Norvell&quot;</bucket>
              <bucket>&quot;Ted Butterfield&quot;</bucket>
              <bucket>&quot;Ted Trevino&quot;</bucket>
              <bucket>&quot;Thais Sissman&quot;</bucket>
              <bucket>&quot;Thea Hendricks&quot;</bucket>
              <bucket>&quot;Thea Hudgings&quot;</bucket>
              <bucket>&quot;Theone Pippenger&quot;</bucket>
              <bucket>&quot;Theresa Coyne&quot;</bucket>
              <bucket>&quot;Theresa Swint&quot;</bucket>
              <bucket>&quot;Thomas Boland&quot;</bucket>
              <bucket>&quot;Thomas Brumley&quot;</bucket>
              <bucket>&quot;Thomas Seio&quot;</bucket>
              <bucket>&quot;Thomas Thornton&quot;</bucket>
              <bucket>&quot;Tiffany House&quot;</bucket>
              <bucket>&quot;Tim Brockman&quot;</bucket>
              <bucket>&quot;Tim Taslimi&quot;</bucket>
              <bucket>&quot;Toby Braunhardt&quot;</bucket>
              <bucket>&quot;Toby Carlisle&quot;</bucket>
              <bucket>&quot;Toby Gnade&quot;</bucket>
              <bucket>&quot;Toby Ritter&quot;</bucket>
              <bucket>&quot;Toby Swindell&quot;</bucket>
              <bucket>&quot;Todd Boyes&quot;</bucket>
              <bucket>&quot;Todd Sumrall&quot;</bucket>
              <bucket>&quot;Tom Ashbrook&quot;</bucket>
              <bucket>&quot;Tom Boeckenhauer&quot;</bucket>
              <bucket>&quot;Tom Prescott&quot;</bucket>
              <bucket>&quot;Tom Stivers&quot;</bucket>
              <bucket>&quot;Tom Zandusky&quot;</bucket>
              <bucket>&quot;Tonja Turnell&quot;</bucket>
              <bucket>&quot;Tony Chapman&quot;</bucket>
              <bucket>&quot;Tony Molinari&quot;</bucket>
              <bucket>&quot;Tony Sayre&quot;</bucket>
              <bucket>&quot;Tracy Blumstein&quot;</bucket>
              <bucket>&quot;Tracy Collins&quot;</bucket>
              <bucket>&quot;Tracy Hopkins&quot;</bucket>
              <bucket>&quot;Tracy Poddar&quot;</bucket>
              <bucket>&quot;Tracy Zic&quot;</bucket>
              <bucket>&quot;Troy Blackwell&quot;</bucket>
              <bucket>&quot;Troy Staebel&quot;</bucket>
              <bucket>&quot;Trudy Brown&quot;</bucket>
              <bucket>&quot;Trudy Glocke&quot;</bucket>
              <bucket>&quot;Trudy Schmidt&quot;</bucket>
              <bucket>&quot;Valerie Dominguez&quot;</bucket>
              <bucket>&quot;Valerie Mitchum&quot;</bucket>
              <bucket>&quot;Valerie Takahito&quot;</bucket>
              <bucket>&quot;Vicky Freymann&quot;</bucket>
              <bucket>&quot;Victor Preis&quot;</bucket>
              <bucket>&quot;Victoria Brennan&quot;</bucket>
              <bucket>&quot;Victoria Pisteka&quot;</bucket>
              <bucket>&quot;Victoria Wilson&quot;</bucket>
              <bucket>&quot;Vivek Gonzalez&quot;</bucket>
              <bucket>&quot;Vivek Grady&quot;</bucket>
              <bucket>&quot;Vivek Sundaresam&quot;</bucket>
              <bucket>&quot;Vivian Mathis&quot;</bucket>
              <bucket>&quot;William Brown&quot;</bucket>
              <bucket>&quot;Xylona Preis&quot;</bucket>
              <bucket>&quot;Yana Sorensen&quot;</bucket>
              <bucket>&quot;Yoseph Carroll&quot;</bucket>
              <bucket>&quot;Zuschuss Carroll&quot;</bucket>
              <bucket>&quot;Zuschuss Donatelli&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.184r3at1toc0rh1caf0440ah8na2].[__tableau_internal_object_id__].[cnt:Orders_9863007C984A45D78964D5AF463FC95A:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Customer Name:nk]</rows>
        <cols>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Market:nk]</cols>
      </table>
      <simple-id uuid='{7178F052-9466-4C3D-96C1-5C013080FA0B}' />
    </worksheet>
    <worksheet name='gender weight'>
      <layout-options>
        <title>
          <formatted-text>
            <run>blue = discrete
green = continuous

behaviour of that data
any data can be used as blue or green</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weight_height' name='federated.18saos210x93mu1283qnz098axrw' />
          </datasources>
          <datasource-dependencies datasource='federated.18saos210x93mu1283qnz098axrw'>
            <column caption='Actual Weight' datatype='integer' name='[actual_weight]' role='measure' type='quantitative' />
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[actual_weight]' derivation='Sum' name='[sum:actual_weight:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.18saos210x93mu1283qnz098axrw].[sum:actual_weight:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.18saos210x93mu1283qnz098axrw].[sum:actual_weight:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18saos210x93mu1283qnz098axrw].[sum:actual_weight:qk]</rows>
        <cols>[federated.18saos210x93mu1283qnz098axrw].[none:gender:nk]</cols>
      </table>
      <simple-id uuid='{CFFFFAB5-3D5E-4365-B49D-316E66FA5882}' />
    </worksheet>
    <worksheet name='map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore' name='federated.184r3at1toc0rh1caf0440ah8na2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.184r3at1toc0rh1caf0440ah8na2'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.184r3at1toc0rh1caf0440ah8na2].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;Spain&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Profit:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Profit:qk]' />
              <size column='[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Quantity:qk]' />
              <lod column='[federated.184r3at1toc0rh1caf0440ah8na2].[none:Country:nk]' />
              <lod column='[federated.184r3at1toc0rh1caf0440ah8na2].[none:State:nk]' />
              <lod column='[federated.184r3at1toc0rh1caf0440ah8na2].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.6850829124450684' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.184r3at1toc0rh1caf0440ah8na2].[Latitude (generated)]</rows>
        <cols>[federated.184r3at1toc0rh1caf0440ah8na2].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{664C690D-C793-4B10-8445-F24313EB4D4C}' />
    </worksheet>
    <worksheet name='map us shipping cost'>
      <layout-options>
        <title>
          <formatted-text>
            <run>map of the avg(shipping cost) in the USA at state level
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore' name='federated.184r3at1toc0rh1caf0440ah8na2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.184r3at1toc0rh1caf0440ah8na2'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Shipping Cost]' derivation='Avg' name='[avg:Shipping Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.184r3at1toc0rh1caf0440ah8na2].[Inclusions (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Connecticut&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Delaware&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;District of Columbia&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Kansas&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Kentucky&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Maine&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Maryland&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Massachusetts&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Minnesota&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Mississippi&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Montana&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Nebraska&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;New Hampshire&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;North Dakota&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Rhode Island&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Vermont&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Wisconsin&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Wyoming&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.184r3at1toc0rh1caf0440ah8na2].[Inclusions (Country,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.184r3at1toc0rh1caf0440ah8na2].[avg:Shipping Cost:qk]' />
              <lod column='[federated.184r3at1toc0rh1caf0440ah8na2].[none:Country:nk]' />
              <lod column='[federated.184r3at1toc0rh1caf0440ah8na2].[none:State:nk]' />
              <geometry column='[federated.184r3at1toc0rh1caf0440ah8na2].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.82359117269515991' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.184r3at1toc0rh1caf0440ah8na2].[Latitude (generated)]</rows>
        <cols>[federated.184r3at1toc0rh1caf0440ah8na2].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{60322C65-1FBB-4934-9BED-47F61D564778}' />
    </worksheet>
    <worksheet name='orders by market'>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore' name='federated.184r3at1toc0rh1caf0440ah8na2' />
          </datasources>
          <datasource-dependencies datasource='federated.184r3at1toc0rh1caf0440ah8na2'>
            <column datatype='string' name='[Market]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.184r3at1toc0rh1caf0440ah8na2].[yr:Order Date:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Quantity:qk]</rows>
        <cols>([federated.184r3at1toc0rh1caf0440ah8na2].[yr:Order Date:ok] / [federated.184r3at1toc0rh1caf0440ah8na2].[none:Market:nk])</cols>
      </table>
      <simple-id uuid='{9EF2B64F-8B5F-41AE-8AF8-66D61027D589}' />
    </worksheet>
    <worksheet name='pie chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore' name='federated.184r3at1toc0rh1caf0440ah8na2' />
          </datasources>
          <datasource-dependencies datasource='federated.184r3at1toc0rh1caf0440ah8na2'>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.184r3at1toc0rh1caf0440ah8na2].[none:Region:nk]' direction='DESC' using='[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Quantity:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Quantity:qk]' />
              <color column='[federated.184r3at1toc0rh1caf0440ah8na2].[none:Region:nk]' />
              <text column='[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Quantity:qk]' />
              <text column='[federated.184r3at1toc0rh1caf0440ah8na2].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.7031491994857788' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E8EE0BEE-C045-4D65-B9C8-E7746E938076}' />
    </worksheet>
    <worksheet name='sales by region ship mode'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Q: How much do we sell by each ship mode in each region?</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore' name='federated.184r3at1toc0rh1caf0440ah8na2' />
          </datasources>
          <datasource-dependencies datasource='federated.184r3at1toc0rh1caf0440ah8na2'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <natural-sort column='[federated.184r3at1toc0rh1caf0440ah8na2].[none:Ship Mode:nk]' direction='ASC' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.184r3at1toc0rh1caf0440ah8na2].[none:Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.184r3at1toc0rh1caf0440ah8na2].[none:Ship Mode:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'><![CDATA[<[federated.184r3at1toc0rh1caf0440ah8na2].[none:Region:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Ship Mode:&#9;</run>
                <run bold='true'><![CDATA[<[federated.184r3at1toc0rh1caf0440ah8na2].[none:Ship Mode:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Sales:&#9;</run>
                <run bold='true'><![CDATA[<[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Sales:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Sales:qk]</rows>
        <cols>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{B7BF4E71-BCAB-473D-B88C-2B774B72EA8A}' />
    </worksheet>
    <worksheet name='scatter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore' name='federated.184r3at1toc0rh1caf0440ah8na2' />
          </datasources>
          <datasource-dependencies datasource='federated.184r3at1toc0rh1caf0440ah8na2'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Avg' name='[avg:Shipping Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Median' name='[med:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.184r3at1toc0rh1caf0440ah8na2].[none:Segment:nk]' />
              <lod column='[federated.184r3at1toc0rh1caf0440ah8na2].[none:Category:nk]' />
              <lod column='[federated.184r3at1toc0rh1caf0440ah8na2].[none:Customer Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.184r3at1toc0rh1caf0440ah8na2].[avg:Shipping Cost:qk]</rows>
        <cols>[federated.184r3at1toc0rh1caf0440ah8na2].[med:Sales:qk]</cols>
      </table>
      <simple-id uuid='{69D567C6-636B-4054-9B2C-615C3250329F}' />
    </worksheet>
    <worksheet name='ship cost and profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run>for category and sub category - how does profit compare to shipping cost (filter to USA and Spain)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore' name='federated.184r3at1toc0rh1caf0440ah8na2' />
          </datasources>
          <datasource-dependencies datasource='federated.184r3at1toc0rh1caf0440ah8na2'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Sum' name='[sum:Shipping Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.184r3at1toc0rh1caf0440ah8na2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Shipping Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Profit:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.184r3at1toc0rh1caf0440ah8na2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Shipping Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Profit:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.184r3at1toc0rh1caf0440ah8na2].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.184r3at1toc0rh1caf0440ah8na2].[:Measure Names]</column>
            <column>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.184r3at1toc0rh1caf0440ah8na2].[:Measure Names]' />
              <size column='[federated.184r3at1toc0rh1caf0440ah8na2].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.184r3at1toc0rh1caf0440ah8na2].[none:Category:nk] / [federated.184r3at1toc0rh1caf0440ah8na2].[none:Sub-Category:nk])</rows>
        <cols>[federated.184r3at1toc0rh1caf0440ah8na2].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{67BF2C92-D6AC-45FD-ADB4-2C3474D75967}' />
    </worksheet>
    <worksheet name='stacked chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore' name='federated.184r3at1toc0rh1caf0440ah8na2' />
          </datasources>
          <datasource-dependencies datasource='federated.184r3at1toc0rh1caf0440ah8na2'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.184r3at1toc0rh1caf0440ah8na2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.184r3at1toc0rh1caf0440ah8na2].[none:Region:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Central&quot;</bucket>
              <bucket>&quot;South&quot;</bucket>
              <bucket>&quot;North&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>&quot;North Asia&quot;</bucket>
              <bucket>&quot;Southeast Asia&quot;</bucket>
              <bucket>&quot;Central Asia&quot;</bucket>
              <bucket>&quot;EMEA&quot;</bucket>
              <bucket>&quot;West&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;East&quot;</bucket>
              <bucket>&quot;Caribbean&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.184r3at1toc0rh1caf0440ah8na2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.184r3at1toc0rh1caf0440ah8na2].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.184r3at1toc0rh1caf0440ah8na2].[Multiple Values]</rows>
        <cols>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{630736A9-2ADA-4E8F-91E9-76F4B44A6B4F}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='orders by market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.184r3at1toc0rh1caf0440ah8na2].[yr:Order Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Year (OrderDate):qk]</field>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[tyr:Order Date:ok]</field>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BC2A5FF9-992C-4D03-A0BF-9ABAAEEB4BB2}' />
    </window>
    <window class='worksheet' name='sales by region ship mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.184r3at1toc0rh1caf0440ah8na2].[none:Ship Mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0C81E29D-5497-4B06-B5AE-373B16FD561E}' />
    </window>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Profit:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Quantity:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{1FBACE76-8D41-4D5D-9C69-6EEF017F6BC9}' />
    </window>
    <window class='worksheet' name='map us shipping cost'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.184r3at1toc0rh1caf0440ah8na2].[avg:Shipping Cost:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{A1C9673D-4E8E-4E01-881C-DCD58E2E5E4E}' />
    </window>
    <window class='worksheet' name='bubble'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[avg:Shipping Cost:qk]</field>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Calculation_1483654666626772992:qk]</field>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[none:City:nk]</field>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Country:nk]</field>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{8B4B466D-723F-4711-B0A9-AB2B53C42F4B}' />
    </window>
    <window class='worksheet' name='bubble2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.184r3at1toc0rh1caf0440ah8na2].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[avg:Sales:qk]</field>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Category:nk]</field>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Country:nk]</field>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1DDBB1B1-7299-4332-8962-30547BA5AA3F}' />
    </window>
    <window class='worksheet' name='pie chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.184r3at1toc0rh1caf0440ah8na2].[none:Region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.184r3at1toc0rh1caf0440ah8na2].[sum:Quantity:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{30DFCEFC-93E4-4086-81A6-B828BE3A041B}' />
    </window>
    <window class='worksheet' name='gender weight'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18saos210x93mu1283qnz098axrw].[none:gender:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C9ABB262-1C1B-4051-98A0-D0258DDB058E}' />
    </window>
    <window class='worksheet' name='scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.184r3at1toc0rh1caf0440ah8na2].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Category:nk]</field>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Customer Name:nk]</field>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF09BF75-9BA9-4A01-8D99-EB66357291CD}' />
    </window>
    <window class='worksheet' name='customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Customer Name:nk]</field>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Market:nk]</field>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Order Priority:nk]</field>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Region:nk]</field>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Ship Mode:nk]</field>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{608250A6-B739-487F-B719-70D236AF5229}' />
    </window>
    <window class='worksheet' name='stacked chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.184r3at1toc0rh1caf0440ah8na2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[:Measure Names]</field>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A47AF902-05E0-47BF-A740-893E24215187}' />
    </window>
    <window class='worksheet' maximized='true' name='ship cost and profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[federated.184r3at1toc0rh1caf0440ah8na2].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.184r3at1toc0rh1caf0440ah8na2].[:Measure Names]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[:Measure Names]</field>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Category:nk]</field>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Country:nk]</field>
            <field>[federated.184r3at1toc0rh1caf0440ah8na2].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{770761B1-5364-4FDC-AFAB-51085B8E52E8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='bubble' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='bubble2' width='192'>
      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
      n8n/B47Pqa8HYp7fAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='customers' width='192'>
      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
      3w8hGiEUnr0DR8MhfD7f5X9+brzU8MERRZFwKIjP5yMYCiOKs6q/z+fDHwjOmRIcDoWIXv6y
      RSFKwD938d7jAIiEgvh8/ivHcFMl+Pc/+Tf+17//lCgQ9Vr50f/5AdZbjBc09/B/f/gSXgBv
      P9/6rxd496JR2D7KT378S+y3eVsCv3OSAzt/wS/fnFWCZ4baOHzoEIcOHeTb3/pRzHWAaNDL
      qUNvcPDgAV7euYthq5emc4d566232PPq7znbNhXTeKIoMNhynh9//z9oGvMDAvXl+9m1Zz9v
      vPJ7LnSb59wQ4zUP8PruXRzYt4tX364iIog3UYJd/VikpayK76bTHqXknWfNiI+q0yfpGTOT
      XLCGbZty2PNKBTmpUjqnozzxzOMkqN5nbIk+yve9xZAzQO6SDdy7OIXSRSUoI1b2HzqHUSOj
      Z9LPM889RWishRPnm1Al5vHg/RsYrj9Nbfck2aWruWftYj5JlREjYZE773+Q05cvvPTilTxV
      vJKwvQ+0eRhv8vcfFHmclgefeI5oJETjuXIcLj+r7n2UlUIU50QDJ5otsCSGfXsFAVVyEds2
      zlxRgqctAjuefBa9p5V9tRNsKJlbkbK/f4Dlmz9FWV4CB/+wE0tw3Y3vAENNF0kpWca6ldlU
      1vZc846UtNwFrFu9jPMn9mP3OqmtaqZs84Mku1poHfVf2dI61sorL77Ii68cwBYIg0RCVvES
      1i4tomLvW7giPlpaOgiEvDTUt1G8/gHS3HU0jvrY+fIuCpauJDJUw+mmTs6caWD55m2U5c61
      Xe+jR5eUgVH97t8jkdpzdazfvHpOYk731vG73/2OLoeCwizTbJ/gV37Ha4c7uWPjwpjGksjk
      ZF6nBMexoNjE/ldf5OU3a1m+uiim8d6LpAQdXW0NdHS245p04RJu5gluaGG6q5JzXVZaLl71
      BPtsoxw+cooZVxiFYrbWikKjRx932RN8zXwuMWsJz33hC3zhuUcxxSkITXWz+3gVbm8IpVTC
      tWtOyngtWrUKmWy2jefklIuw30veqi2sWlDAw49tpbf6CPuOXiB0EyvmJ4Gwc5AJaRbZ2rnp
      fZlavIYvffGLlBr8tPZNzPYJfu6veXJbGedP1c5JzCuEHbT0+Hjyuc/z3FP30FxVP+fVoTMW
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='gender weight' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='map' width='192'>
      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
      Kl/z/wAJvXrXJ/za7AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='map us shipping cost' width='192'>
      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
      PuJslvLmyQ9XEvKxtB+V9xpEIT/52UeXd4QFQnd7MBccTiUXbHVIiYxDrkkJF4mL715ZHOI4
      5a1pqrW1MheBto3w1b502/8v2sYfIjFUxpv9SCHZe3Cf1At48+zFe+hB+aM87/IEYFs5ZH6v
      myO2dSz7sjYshiRcFkqksZjMelRF/quFfFXKP5chgLyupk9jjScv3OZ5QCAbzLAEqRS79+4w
      bzlutwuszXZ3XRByxnZpM2gc7TA+PWSw6WKsFzyunTbhbkvKuqazKqyKpzk3XGo5rq9i7zMd
      STUf0x8SrLL0eb5P3JJZsAuMscxmc7Q2BIE7otXzFL7vM5vN2NzsPsC91u7aLXaA2D7gbx89
      57p9Wr1K3ZjWgkwrTHEAOk1JbHOFWRZfVL93+vot40m8eHsdR7I1eFmumXJDTf54U0xbXL1G
      h29rF94nQna21Xr5D0dECra2ePH9U248WJ3Bz8WLySLZmssaZ4vvK5/P/AJXckzqxBuyeXuA
      qJjkqiHEQohWy0/elXZLhuX19094ovsIf3VOz1YY3uR0RRGb/dfEmfTkmD++OWS459zzpdWm
      XVQpFNDM6XV4NIYXJxfr9yVgKaHVmMkfDuLnMNzb5ejb79YybUsp6PcD+n0XOxSGZcaOtkO6
      F7a8Zj9XEgxnggGz8Wt6W84h1mb2y69nrVe6sY6JsaVEp8izDnsv6yjraSfQphPNIjAW/lDP
      s6vvUWizXl0M8aeTGBBuH7A15NkgPV9lFjmLVNLl60RgjMXzFcaYc/kqrFQYrVt3210eFl18
      VxIObbdvcPh22nGzLtPXKHGlwrYcy9qezVMSrgvLrS+ViZISi+Q4DRjp5oqU7en9EYjiXZsO
      c9BaM5nMmM0STk8mpKlhNJoymyUkiWY8njGZzIt7JydnzGcppyfjsq/rEJ+1JPFivv/LQmZz
      KpTxHK6GzIRgasPKn/Uox2q0o/tel9HOGwZhbZ4T8nIYt/7zDrvdmc6C2AqmWtFTeaY5w6qz
      B64acuNC+0p49ZQY9ULCKERJiVIC3/eQCnzPQyo3C0opdy9QbG1tOK92sVHKFv1eljp96/ZN
      vvu7L/nJ3//5lY8hhzwr39Mvv3/3eYGqUaLGaqx2WaryKMhl76qLu+XIL8Q7sP40QFBPQSKw
      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
      peCAJTiiogAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='orders by market' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='pie chart' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='sales by region ship mode' width='192'>
      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
      CVQ6GyXJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='scatter' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='ship cost and profit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='stacked chart' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
