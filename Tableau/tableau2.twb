<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.21.1217.2252                               -->
<workbook original-version='18.1' source-build='2021.4.2 (20214.21.1217.2252)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Choose how many you want?' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='50'>
        <calculation class='tableau' formula='50' />
        <range granularity='5' max='50' min='5' />
      </column>
    </datasource>
    <datasource caption='Orders+ (Global Superstore)' inline='true' name='federated.0u2l00m1qcpaee1fn3urq0huwf2l' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global Superstore' name='excel-direct.1nmfrd60281de919uxpm50mson9y'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Raphael Costa/Desktop/Thiago/Data Mining/IronHack/GitHub/cosferlabwork/Jupyter/Week2/Global Superstore.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation all='true' name='Orders+' type='union'>
          <columns header='yes'>
            <column datatype='string' name='Category' />
            <column datatype='string' name='City' />
            <column datatype='string' name='Country' />
            <column datatype='string' name='Customer Name' />
            <column datatype='string' name='Market' />
            <column datatype='string' name='Customer ID' />
            <column datatype='date' name='Order Date' />
            <column datatype='integer' name='Year (OrderDate)' />
            <column datatype='string' name='Order ID' />
            <column datatype='string' name='Order Priority' />
            <column datatype='string' name='Product ID' />
            <column datatype='string' name='Product Name' />
            <column datatype='string' name='Region' />
            <column datatype='integer' name='Row ID' />
            <column datatype='string' name='Segment' />
            <column datatype='date' name='Ship Date' />
            <column datatype='string' name='Ship Mode' />
            <column datatype='string' name='State' />
            <column datatype='string' name='Sub-Category' />
            <column datatype='real' name='Discount' />
            <column datatype='real' name='Profit' />
            <column datatype='integer' name='Quantity' />
            <column datatype='real' name='Sales' />
            <column datatype='real' name='Shipping Cost' />
            <column datatype='string' name='Person' />
            <column datatype='string' name='Returned' />
            <column datatype='string' name='Sheet' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='excel-direct.1nmfrd60281de919uxpm50mson9y' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='2'>
              <column datatype='string' name='Category' ordinal='0' />
              <column datatype='string' name='City' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Customer Name' ordinal='3' />
              <column datatype='string' name='Market' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='date' name='Order Date' ordinal='6' />
              <column datatype='integer' name='Year (OrderDate)' ordinal='7' />
              <column datatype='string' name='Order ID' ordinal='8' />
              <column datatype='string' name='Order Priority' ordinal='9' />
              <column datatype='string' name='Product ID' ordinal='10' />
              <column datatype='string' name='Product Name' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='integer' name='Row ID' ordinal='13' />
              <column datatype='string' name='Segment' ordinal='14' />
              <column datatype='date' name='Ship Date' ordinal='15' />
              <column datatype='string' name='Ship Mode' ordinal='16' />
              <column datatype='string' name='State' ordinal='17' />
              <column datatype='string' name='Sub-Category' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
              <column datatype='integer' name='Quantity' ordinal='21' />
              <column datatype='real' name='Sales' ordinal='22' />
              <column datatype='real' name='Shipping Cost' ordinal='23' />
            </columns>
          </relation>
          <relation connection='excel-direct.1nmfrd60281de919uxpm50mson9y' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B14:no:A1:B14:0' header='yes' outcome='2'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.1nmfrd60281de919uxpm50mson9y' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:C1174:no:A1:C1174:0' header='yes' outcome='2'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Market' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation all='true' name='Orders+' type='union'>
          <columns header='yes'>
            <column datatype='string' name='Category' />
            <column datatype='string' name='City' />
            <column datatype='string' name='Country' />
            <column datatype='string' name='Customer Name' />
            <column datatype='string' name='Market' />
            <column datatype='string' name='Customer ID' />
            <column datatype='date' name='Order Date' />
            <column datatype='integer' name='Year (OrderDate)' />
            <column datatype='string' name='Order ID' />
            <column datatype='string' name='Order Priority' />
            <column datatype='string' name='Product ID' />
            <column datatype='string' name='Product Name' />
            <column datatype='string' name='Region' />
            <column datatype='integer' name='Row ID' />
            <column datatype='string' name='Segment' />
            <column datatype='date' name='Ship Date' />
            <column datatype='string' name='Ship Mode' />
            <column datatype='string' name='State' />
            <column datatype='string' name='Sub-Category' />
            <column datatype='real' name='Discount' />
            <column datatype='real' name='Profit' />
            <column datatype='integer' name='Quantity' />
            <column datatype='real' name='Sales' />
            <column datatype='real' name='Shipping Cost' />
            <column datatype='string' name='Person' />
            <column datatype='string' name='Returned' />
            <column datatype='string' name='Sheet' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='excel-direct.1nmfrd60281de919uxpm50mson9y' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='2'>
              <column datatype='string' name='Category' ordinal='0' />
              <column datatype='string' name='City' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Customer Name' ordinal='3' />
              <column datatype='string' name='Market' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='date' name='Order Date' ordinal='6' />
              <column datatype='integer' name='Year (OrderDate)' ordinal='7' />
              <column datatype='string' name='Order ID' ordinal='8' />
              <column datatype='string' name='Order Priority' ordinal='9' />
              <column datatype='string' name='Product ID' ordinal='10' />
              <column datatype='string' name='Product Name' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='integer' name='Row ID' ordinal='13' />
              <column datatype='string' name='Segment' ordinal='14' />
              <column datatype='date' name='Ship Date' ordinal='15' />
              <column datatype='string' name='Ship Mode' ordinal='16' />
              <column datatype='string' name='State' ordinal='17' />
              <column datatype='string' name='Sub-Category' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
              <column datatype='integer' name='Quantity' ordinal='21' />
              <column datatype='real' name='Sales' ordinal='22' />
              <column datatype='real' name='Shipping Cost' ordinal='23' />
            </columns>
          </relation>
          <relation connection='excel-direct.1nmfrd60281de919uxpm50mson9y' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B14:no:A1:B14:0' header='yes' outcome='2'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.1nmfrd60281de919uxpm50mson9y' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:C1174:no:A1:C1174:0' header='yes' outcome='2'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Market' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year (OrderDate)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (OrderDate)]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Year (OrderDate)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>15</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sheet</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sheet]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Sheet</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_7178286D63854D179140AE74B2A26A12]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[Year (OrderDate)]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders+' datatype='table' name='[__tableau_internal_object_id__].[_7178286D63854D179140AE74B2A26A12]' role='measure' type='quantitative' />
      <drill-paths>
        <drill-path name='Country, State, City'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brazil&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders+' id='_7178286D63854D179140AE74B2A26A12'>
            <properties context=''>
              <relation all='true' name='Orders+' type='union'>
                <columns header='yes'>
                  <column datatype='string' name='Category' />
                  <column datatype='string' name='City' />
                  <column datatype='string' name='Country' />
                  <column datatype='string' name='Customer Name' />
                  <column datatype='string' name='Market' />
                  <column datatype='string' name='Customer ID' />
                  <column datatype='date' name='Order Date' />
                  <column datatype='integer' name='Year (OrderDate)' />
                  <column datatype='string' name='Order ID' />
                  <column datatype='string' name='Order Priority' />
                  <column datatype='string' name='Product ID' />
                  <column datatype='string' name='Product Name' />
                  <column datatype='string' name='Region' />
                  <column datatype='integer' name='Row ID' />
                  <column datatype='string' name='Segment' />
                  <column datatype='date' name='Ship Date' />
                  <column datatype='string' name='Ship Mode' />
                  <column datatype='string' name='State' />
                  <column datatype='string' name='Sub-Category' />
                  <column datatype='real' name='Discount' />
                  <column datatype='real' name='Profit' />
                  <column datatype='integer' name='Quantity' />
                  <column datatype='real' name='Sales' />
                  <column datatype='real' name='Shipping Cost' />
                  <column datatype='string' name='Person' />
                  <column datatype='string' name='Returned' />
                  <column datatype='string' name='Sheet' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='excel-direct.1nmfrd60281de919uxpm50mson9y' name='Orders' table='[Orders$]' type='table'>
                  <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='2'>
                    <column datatype='string' name='Category' ordinal='0' />
                    <column datatype='string' name='City' ordinal='1' />
                    <column datatype='string' name='Country' ordinal='2' />
                    <column datatype='string' name='Customer Name' ordinal='3' />
                    <column datatype='string' name='Market' ordinal='4' />
                    <column datatype='string' name='Customer ID' ordinal='5' />
                    <column datatype='date' name='Order Date' ordinal='6' />
                    <column datatype='integer' name='Year (OrderDate)' ordinal='7' />
                    <column datatype='string' name='Order ID' ordinal='8' />
                    <column datatype='string' name='Order Priority' ordinal='9' />
                    <column datatype='string' name='Product ID' ordinal='10' />
                    <column datatype='string' name='Product Name' ordinal='11' />
                    <column datatype='string' name='Region' ordinal='12' />
                    <column datatype='integer' name='Row ID' ordinal='13' />
                    <column datatype='string' name='Segment' ordinal='14' />
                    <column datatype='date' name='Ship Date' ordinal='15' />
                    <column datatype='string' name='Ship Mode' ordinal='16' />
                    <column datatype='string' name='State' ordinal='17' />
                    <column datatype='string' name='Sub-Category' ordinal='18' />
                    <column datatype='real' name='Discount' ordinal='19' />
                    <column datatype='real' name='Profit' ordinal='20' />
                    <column datatype='integer' name='Quantity' ordinal='21' />
                    <column datatype='real' name='Sales' ordinal='22' />
                    <column datatype='real' name='Shipping Cost' ordinal='23' />
                  </columns>
                </relation>
                <relation connection='excel-direct.1nmfrd60281de919uxpm50mson9y' name='People' table='[People$]' type='table'>
                  <columns gridOrigin='A1:B14:no:A1:B14:0' header='yes' outcome='2'>
                    <column datatype='string' name='Person' ordinal='0' />
                    <column datatype='string' name='Region' ordinal='1' />
                  </columns>
                </relation>
                <relation connection='excel-direct.1nmfrd60281de919uxpm50mson9y' name='Returns' table='[Returns$]' type='table'>
                  <columns gridOrigin='A1:C1174:no:A1:C1174:0' header='yes' outcome='2'>
                    <column datatype='string' name='Returned' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                    <column datatype='string' name='Market' ordinal='2' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='cycle chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='federated.0u2l00m1qcpaee1fn3urq0huwf2l' />
          </datasources>
          <datasource-dependencies datasource='federated.0u2l00m1qcpaee1fn3urq0huwf2l'>
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Avg' name='[avg:Shipping Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Date]' derivation='Month' name='[mn:Ship Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Ship Date]' derivation='Weekday' name='[wd:Ship Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[avg:Shipping Cost:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[avg:Shipping Cost:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[avg:Shipping Cost:qk]' field-type='quantitative' max='33.104302478886311' min='2.4710202541177444' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[avg:Shipping Cost:qk]</rows>
        <cols>([federated.0u2l00m1qcpaee1fn3urq0huwf2l].[wd:Ship Date:ok] / [federated.0u2l00m1qcpaee1fn3urq0huwf2l].[mn:Ship Date:ok])</cols>
      </table>
      <simple-id uuid='{195CE2FD-2E60-41E4-98B3-E543DC59E0A9}' />
    </worksheet>
    <worksheet name='filter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Hidden filters, visible filter in the title and interactive/dynamic filters
</run>
            <run bold='true' fontcolor='#000000'><![CDATA[filtered to marks : <[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Market:nk]>]]></run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#000000'><![CDATA[shows data for: <[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Customer Name:nk]>]]></run>
            <run>Æ&#10;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='federated.0u2l00m1qcpaee1fn3urq0huwf2l' />
          </datasources>
          <datasource-dependencies datasource='federated.0u2l00m1qcpaee1fn3urq0huwf2l'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Orders+' datatype='integer' name='[__tableau_internal_object_id__].[_7178286D63854D179140AE74B2A26A12]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders+' datatype='table' name='[__tableau_internal_object_id__].[_7178286D63854D179140AE74B2A26A12]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[_7178286D63854D179140AE74B2A26A12]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:_7178286D63854D179140AE74B2A26A12:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Customer Name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[_7178286D63854D179140AE74B2A26A12])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;Aaron Bergman&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Zuschuss Donatelli&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Market:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Market:nk]' />
              <groupfilter function='member' level='[none:Market:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Sub-Category:nk]'>
            <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Accessories&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[sum:Profit:qk]' included-values='in-range'>
            <min>-1247.3604</min>
            <max>1484.9409000000001</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[__tableau_internal_object_id__].[cnt:_7178286D63854D179140AE74B2A26A12:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Market:nk]</column>
            <column>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Customer Name:nk]</column>
            <column>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Sub-Category:nk]</column>
            <column>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[sum:Profit:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Sub-Category:nk]' value='Select Sub-Category'>
              <formatted-text>
                <run>Select Sub-Category</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Customer Name:nk]</rows>
        <cols>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[__tableau_internal_object_id__].[cnt:_7178286D63854D179140AE74B2A26A12:qk]</cols>
      </table>
      <simple-id uuid='{161AAF89-ECDD-453C-A1E5-81ACBBAD1AB1}' />
    </worksheet>
    <worksheet name='filter top n - parameter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='federated.0u2l00m1qcpaee1fn3urq0huwf2l' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose how many you want?' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='50'>
              <calculation class='tableau' formula='50' />
              <range granularity='5' max='50' min='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0u2l00m1qcpaee1fn3urq0huwf2l'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Customer Name:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Customer Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Customer Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Tamara Chand&quot;</bucket>
              <bucket>&quot;Raymond Buch&quot;</bucket>
              <bucket>&quot;Sanjit Chand&quot;</bucket>
              <bucket>&quot;Hunter Lopez&quot;</bucket>
              <bucket>&quot;Bill Eplett&quot;</bucket>
              <bucket>&quot;Harry Marie&quot;</bucket>
              <bucket>&quot;Susan Pistek&quot;</bucket>
              <bucket>&quot;Mike Gockenbach&quot;</bucket>
              <bucket>&quot;Adrian Barton&quot;</bucket>
              <bucket>&quot;Tom Ashbrook&quot;</bucket>
              <bucket>&quot;Jane Waco&quot;</bucket>
              <bucket>&quot;Daniel Raglin&quot;</bucket>
              <bucket>&quot;Sanjit Engle&quot;</bucket>
              <bucket>&quot;Bill Shonely&quot;</bucket>
              <bucket>&quot;Ellis Ballard&quot;</bucket>
              <bucket>&quot;Nathan Mautz&quot;</bucket>
              <bucket>&quot;Christopher Conant&quot;</bucket>
              <bucket>&quot;Keith Dawkins&quot;</bucket>
              <bucket>&quot;John Huston&quot;</bucket>
              <bucket>&quot;Greg Tran&quot;</bucket>
              <bucket>&quot;Rick Wilson&quot;</bucket>
              <bucket>&quot;Todd Sumrall&quot;</bucket>
              <bucket>&quot;Dianna Wilson&quot;</bucket>
              <bucket>&quot;Carlos Daly&quot;</bucket>
              <bucket>&quot;Adam Bellavance&quot;</bucket>
              <bucket>&quot;Jill Fjeld&quot;</bucket>
              <bucket>&quot;Brosina Hoffman&quot;</bucket>
              <bucket>&quot;Janet Lee&quot;</bucket>
              <bucket>&quot;Aaron Bergman&quot;</bucket>
              <bucket>&quot;Maria Bertelson&quot;</bucket>
              <bucket>&quot;Patrick O&apos;Donnell&quot;</bucket>
              <bucket>&quot;Fred Hopkins&quot;</bucket>
              <bucket>&quot;Dave Poirier&quot;</bucket>
              <bucket>&quot;James Galang&quot;</bucket>
              <bucket>&quot;Steven Roelle&quot;</bucket>
              <bucket>&quot;Brian Moss&quot;</bucket>
              <bucket>&quot;Magdelene Morse&quot;</bucket>
              <bucket>&quot;Joe Kamberova&quot;</bucket>
              <bucket>&quot;Yoseph Carroll&quot;</bucket>
              <bucket>&quot;Alan Hwang&quot;</bucket>
              <bucket>&quot;Penelope Sewall&quot;</bucket>
              <bucket>&quot;Charles Sheldon&quot;</bucket>
              <bucket>&quot;Don Jones&quot;</bucket>
              <bucket>&quot;Laurel Beltran&quot;</bucket>
              <bucket>&quot;Larry Tron&quot;</bucket>
              <bucket>&quot;Nathan Gelder&quot;</bucket>
              <bucket>&quot;Tom Boeckenhauer&quot;</bucket>
              <bucket>&quot;Randy Bradley&quot;</bucket>
              <bucket>&quot;Katherine Nockton&quot;</bucket>
              <bucket>&quot;Denny Ordway&quot;</bucket>
              <bucket>&quot;Ben Ferrer&quot;</bucket>
              <bucket>&quot;George Zrebassa&quot;</bucket>
              <bucket>&quot;Mitch Webber&quot;</bucket>
              <bucket>&quot;Dave Kipp&quot;</bucket>
              <bucket>&quot;Nicole Hansen&quot;</bucket>
              <bucket>&quot;Rick Bensley&quot;</bucket>
              <bucket>&quot;Paul Van Hugh&quot;</bucket>
              <bucket>&quot;Vivek Grady&quot;</bucket>
              <bucket>&quot;Cindy Chapman&quot;</bucket>
              <bucket>&quot;Patrick Jones&quot;</bucket>
              <bucket>&quot;Justin Hirsh&quot;</bucket>
              <bucket>&quot;Amy Cox&quot;</bucket>
              <bucket>&quot;Jim Karlsson&quot;</bucket>
              <bucket>&quot;Robert Dilbeck&quot;</bucket>
              <bucket>&quot;Laura Armstrong&quot;</bucket>
              <bucket>&quot;Dean percer&quot;</bucket>
              <bucket>&quot;Erin Mull&quot;</bucket>
              <bucket>&quot;Rob Dowd&quot;</bucket>
              <bucket>&quot;Gary Hwang&quot;</bucket>
              <bucket>&quot;Cynthia Arntzen&quot;</bucket>
              <bucket>&quot;Natalie Webber&quot;</bucket>
              <bucket>&quot;Bobby Elias&quot;</bucket>
              <bucket>&quot;Patrick O&apos;Brill&quot;</bucket>
              <bucket>&quot;Michael Dominguez&quot;</bucket>
              <bucket>&quot;Gary Zandusky&quot;</bucket>
              <bucket>&quot;Mathew Reese&quot;</bucket>
              <bucket>&quot;Barry Weirich&quot;</bucket>
              <bucket>&quot;Christina Anderson&quot;</bucket>
              <bucket>&quot;Dave Brooks&quot;</bucket>
              <bucket>&quot;Evan Minnotte&quot;</bucket>
              <bucket>&quot;Shirley Daniels&quot;</bucket>
              <bucket>&quot;Matthew Clasen&quot;</bucket>
              <bucket>&quot;Eugene Moren&quot;</bucket>
              <bucket>&quot;Joe Elijah&quot;</bucket>
              <bucket>&quot;Brian Stugart&quot;</bucket>
              <bucket>&quot;Katharine Harms&quot;</bucket>
              <bucket>&quot;Bart Watters&quot;</bucket>
              <bucket>&quot;Rick Duston&quot;</bucket>
              <bucket>&quot;Becky Pak&quot;</bucket>
              <bucket>&quot;Andrew Roberts&quot;</bucket>
              <bucket>&quot;Maribeth Yedwab&quot;</bucket>
              <bucket>&quot;Frank Hawley&quot;</bucket>
              <bucket>&quot;Maribeth Schnelling&quot;</bucket>
              <bucket>&quot;Grace Kelly&quot;</bucket>
              <bucket>&quot;Julie Prescott&quot;</bucket>
              <bucket>&quot;Roland Schwarz&quot;</bucket>
              <bucket>&quot;Yana Sorensen&quot;</bucket>
              <bucket>&quot;Maria Etezadi&quot;</bucket>
              <bucket>&quot;Lena Radford&quot;</bucket>
              <bucket>&quot;Theresa Coyne&quot;</bucket>
              <bucket>&quot;Dianna Vittorini&quot;</bucket>
              <bucket>&quot;Ruben Dartt&quot;</bucket>
              <bucket>&quot;Ruben Ausman&quot;</bucket>
              <bucket>&quot;Cyra Reiten&quot;</bucket>
              <bucket>&quot;Eric Murdock&quot;</bucket>
              <bucket>&quot;John Grady&quot;</bucket>
              <bucket>&quot;Carol Adams&quot;</bucket>
              <bucket>&quot;Tamara Willingham&quot;</bucket>
              <bucket>&quot;Denny Joy&quot;</bucket>
              <bucket>&quot;Anne McFarland&quot;</bucket>
              <bucket>&quot;Jeremy Pistek&quot;</bucket>
              <bucket>&quot;Neil Ducich&quot;</bucket>
              <bucket>&quot;Liz Thompson&quot;</bucket>
              <bucket>&quot;Neoma Murray&quot;</bucket>
              <bucket>&quot;Andy Reiter&quot;</bucket>
              <bucket>&quot;Arthur Prichep&quot;</bucket>
              <bucket>&quot;Erica Smith&quot;</bucket>
              <bucket>&quot;Anthony Rawles&quot;</bucket>
              <bucket>&quot;Katrina Willman&quot;</bucket>
              <bucket>&quot;Meg O&apos;Connel&quot;</bucket>
              <bucket>&quot;Trudy Glocke&quot;</bucket>
              <bucket>&quot;Randy Ferguson&quot;</bucket>
              <bucket>&quot;Scot Coram&quot;</bucket>
              <bucket>&quot;Tim Brockman&quot;</bucket>
              <bucket>&quot;Jack O&apos;Briant&quot;</bucket>
              <bucket>&quot;Neil Knudson&quot;</bucket>
              <bucket>&quot;Roger Demir&quot;</bucket>
              <bucket>&quot;Nora Paige&quot;</bucket>
              <bucket>&quot;Erica Bern&quot;</bucket>
              <bucket>&quot;Frank Olsen&quot;</bucket>
              <bucket>&quot;Christopher Martinez&quot;</bucket>
              <bucket>&quot;Carl Weiss&quot;</bucket>
              <bucket>&quot;Ashley Jarboe&quot;</bucket>
              <bucket>&quot;Corey Catlett&quot;</bucket>
              <bucket>&quot;Anne Pryor&quot;</bucket>
              <bucket>&quot;Toby Gnade&quot;</bucket>
              <bucket>&quot;Alice McCarthy&quot;</bucket>
              <bucket>&quot;Sally Knutson&quot;</bucket>
              <bucket>&quot;Art Foster&quot;</bucket>
              <bucket>&quot;Doug Bickford&quot;</bucket>
              <bucket>&quot;Dennis Kane&quot;</bucket>
              <bucket>&quot;Julia West&quot;</bucket>
              <bucket>&quot;Chuck Sachs&quot;</bucket>
              <bucket>&quot;Chuck Clark&quot;</bucket>
              <bucket>&quot;Justin Ellison&quot;</bucket>
              <bucket>&quot;Aimee Bixby&quot;</bucket>
              <bucket>&quot;Neil Französisch&quot;</bucket>
              <bucket>&quot;Damala Kotsonis&quot;</bucket>
              <bucket>&quot;Sam Zeldin&quot;</bucket>
              <bucket>&quot;Cari Sayre&quot;</bucket>
              <bucket>&quot;Eugene Barchas&quot;</bucket>
              <bucket>&quot;Karen Daniels&quot;</bucket>
              <bucket>&quot;Fred Harton&quot;</bucket>
              <bucket>&quot;Sandra Glassco&quot;</bucket>
              <bucket>&quot;Roger Barcio&quot;</bucket>
              <bucket>&quot;Gary Mitchum&quot;</bucket>
              <bucket>&quot;Joy Bell-&quot;</bucket>
              <bucket>&quot;Maxwell Schwartz&quot;</bucket>
              <bucket>&quot;Mark Cousins&quot;</bucket>
              <bucket>&quot;Liz Carlisle&quot;</bucket>
              <bucket>&quot;Roy Französisch&quot;</bucket>
              <bucket>&quot;Ralph Ritter&quot;</bucket>
              <bucket>&quot;Benjamin Venier&quot;</bucket>
              <bucket>&quot;Nat Gilpin&quot;</bucket>
              <bucket>&quot;Delfina Latchford&quot;</bucket>
              <bucket>&quot;Alyssa Tate&quot;</bucket>
              <bucket>&quot;Steven Ward&quot;</bucket>
              <bucket>&quot;Eva Jacobs&quot;</bucket>
              <bucket>&quot;Brian Derr&quot;</bucket>
              <bucket>&quot;Odella Nelson&quot;</bucket>
              <bucket>&quot;Bryan Spruell&quot;</bucket>
              <bucket>&quot;Frank Carlisle&quot;</bucket>
              <bucket>&quot;Janet Molinari&quot;</bucket>
              <bucket>&quot;Jamie Kunitz&quot;</bucket>
              <bucket>&quot;Kunst Miller&quot;</bucket>
              <bucket>&quot;Jim Kriz&quot;</bucket>
              <bucket>&quot;Denise Leinenbach&quot;</bucket>
              <bucket>&quot;Patricia Hirasaki&quot;</bucket>
              <bucket>&quot;Rob Lucas&quot;</bucket>
              <bucket>&quot;Jason Fortune-&quot;</bucket>
              <bucket>&quot;Dennis Pardue&quot;</bucket>
              <bucket>&quot;Paul Prost&quot;</bucket>
              <bucket>&quot;Arthur Wiediger&quot;</bucket>
              <bucket>&quot;Doug Jacobs&quot;</bucket>
              <bucket>&quot;Henry MacAllister&quot;</bucket>
              <bucket>&quot;Cathy Hwang&quot;</bucket>
              <bucket>&quot;Craig Leslie&quot;</bucket>
              <bucket>&quot;Jennifer Ferguson&quot;</bucket>
              <bucket>&quot;Annie Thurman&quot;</bucket>
              <bucket>&quot;Ricardo Emerson&quot;</bucket>
              <bucket>&quot;Muhammed Yedwab&quot;</bucket>
              <bucket>&quot;Andrew Gjertsen&quot;</bucket>
              <bucket>&quot;Harold Dahlen&quot;</bucket>
              <bucket>&quot;Justin Deggeller&quot;</bucket>
              <bucket>&quot;Chad Cunningham&quot;</bucket>
              <bucket>&quot;Natalie DeCherney&quot;</bucket>
              <bucket>&quot;Heather Jas&quot;</bucket>
              <bucket>&quot;Ralph Arnett&quot;</bucket>
              <bucket>&quot;Emily Grady&quot;</bucket>
              <bucket>&quot;Toby Swindell&quot;</bucket>
              <bucket>&quot;Alejandro Grove&quot;</bucket>
              <bucket>&quot;Chris Selesnick&quot;</bucket>
              <bucket>&quot;Frank Merwin&quot;</bucket>
              <bucket>&quot;Mick Brown&quot;</bucket>
              <bucket>&quot;Christina DeMoss&quot;</bucket>
              <bucket>&quot;Elpida Rittenbach&quot;</bucket>
              <bucket>&quot;Monica Federle&quot;</bucket>
              <bucket>&quot;Emily Ducich&quot;</bucket>
              <bucket>&quot;Claire Gute&quot;</bucket>
              <bucket>&quot;Bobby Odegard&quot;</bucket>
              <bucket>&quot;Helen Wasserman&quot;</bucket>
              <bucket>&quot;William Brown&quot;</bucket>
              <bucket>&quot;Bill Tyler&quot;</bucket>
              <bucket>&quot;Bradley Nguyen&quot;</bucket>
              <bucket>&quot;Robert Marley&quot;</bucket>
              <bucket>&quot;Alejandro Savely&quot;</bucket>
              <bucket>&quot;Astrea Jones&quot;</bucket>
              <bucket>&quot;Bryan Mills&quot;</bucket>
              <bucket>&quot;Sarah Jordon&quot;</bucket>
              <bucket>&quot;Chris Cortes&quot;</bucket>
              <bucket>&quot;Alan Schoenberger&quot;</bucket>
              <bucket>&quot;Heather Kirkland&quot;</bucket>
              <bucket>&quot;Becky Castell&quot;</bucket>
              <bucket>&quot;Cari MacIntyre&quot;</bucket>
              <bucket>&quot;Anthony Johnson&quot;</bucket>
              <bucket>&quot;Bruce Degenhardt&quot;</bucket>
              <bucket>&quot;Anna Häberlin&quot;</bucket>
              <bucket>&quot;Jennifer Braxton&quot;</bucket>
              <bucket>&quot;Aaron Hawkins&quot;</bucket>
              <bucket>&quot;Lisa Ryan&quot;</bucket>
              <bucket>&quot;Ionia McGrath&quot;</bucket>
              <bucket>&quot;Berenike Kampe&quot;</bucket>
              <bucket>&quot;Anna Andreadi&quot;</bucket>
              <bucket>&quot;Chad McGuire&quot;</bucket>
              <bucket>&quot;Carol Triggs&quot;</bucket>
              <bucket>&quot;Max Jones&quot;</bucket>
              <bucket>&quot;Toby Ritter&quot;</bucket>
              <bucket>&quot;Alan Barnes&quot;</bucket>
              <bucket>&quot;Hilary Holden&quot;</bucket>
              <bucket>&quot;Katherine Ducich&quot;</bucket>
              <bucket>&quot;Caroline Jumper&quot;</bucket>
              <bucket>&quot;Sean O&apos;Donnell&quot;</bucket>
              <bucket>&quot;John Lee&quot;</bucket>
              <bucket>&quot;Richard Eichhorn&quot;</bucket>
              <bucket>&quot;Victoria Pisteka&quot;</bucket>
              <bucket>&quot;Karen Ferguson&quot;</bucket>
              <bucket>&quot;Steve Nguyen&quot;</bucket>
              <bucket>&quot;Bradley Drucker&quot;</bucket>
              <bucket>&quot;Deirdre Greer&quot;</bucket>
              <bucket>&quot;Clytie Kelty&quot;</bucket>
              <bucket>&quot;Kelly Williams&quot;</bucket>
              <bucket>&quot;Kristen Hastings&quot;</bucket>
              <bucket>&quot;Sonia Sunley&quot;</bucket>
              <bucket>&quot;Sarah Bern&quot;</bucket>
              <bucket>&quot;Tom Stivers&quot;</bucket>
              <bucket>&quot;Kelly Collister&quot;</bucket>
              <bucket>&quot;Ben Wallace&quot;</bucket>
              <bucket>&quot;Ross Baird&quot;</bucket>
              <bucket>&quot;Jim Sink&quot;</bucket>
              <bucket>&quot;Thomas Seio&quot;</bucket>
              <bucket>&quot;Corey Roper&quot;</bucket>
              <bucket>&quot;Sheri Gordon&quot;</bucket>
              <bucket>&quot;Ted Trevino&quot;</bucket>
              <bucket>&quot;Karen Bern&quot;</bucket>
              <bucket>&quot;John Murray&quot;</bucket>
              <bucket>&quot;Marc Harrigan&quot;</bucket>
              <bucket>&quot;Muhammed Lee&quot;</bucket>
              <bucket>&quot;Dario Medina&quot;</bucket>
              <bucket>&quot;Gene Hale&quot;</bucket>
              <bucket>&quot;Andy Yotov&quot;</bucket>
              <bucket>&quot;Alex Russell&quot;</bucket>
              <bucket>&quot;Thomas Boland&quot;</bucket>
              <bucket>&quot;Evan Henry&quot;</bucket>
              <bucket>&quot;Art Ferguson&quot;</bucket>
              <bucket>&quot;Linda Cazamias&quot;</bucket>
              <bucket>&quot;Thea Hudgings&quot;</bucket>
              <bucket>&quot;Noah Childs&quot;</bucket>
              <bucket>&quot;Kean Nguyen&quot;</bucket>
              <bucket>&quot;Jason Gross&quot;</bucket>
              <bucket>&quot;Maria Zettner&quot;</bucket>
              <bucket>&quot;Rob Williams&quot;</bucket>
              <bucket>&quot;Eric Hoffmann&quot;</bucket>
              <bucket>&quot;Craig Carroll&quot;</bucket>
              <bucket>&quot;Quincy Jones&quot;</bucket>
              <bucket>&quot;Shui Tom&quot;</bucket>
              <bucket>&quot;Victor Preis&quot;</bucket>
              <bucket>&quot;Tonja Turnell&quot;</bucket>
              <bucket>&quot;Seth Vernon&quot;</bucket>
              <bucket>&quot;Carlos Meador&quot;</bucket>
              <bucket>&quot;Parhena Norris&quot;</bucket>
              <bucket>&quot;Matthew Grinstein&quot;</bucket>
              <bucket>&quot;Keith Herrera&quot;</bucket>
              <bucket>&quot;Stewart Visinsky&quot;</bucket>
              <bucket>&quot;David Kendrick&quot;</bucket>
              <bucket>&quot;Philisse Overcash&quot;</bucket>
              <bucket>&quot;Erin Smith&quot;</bucket>
              <bucket>&quot;Mark Packer&quot;</bucket>
              <bucket>&quot;Claudia Bergmann&quot;</bucket>
              <bucket>&quot;Muhammed MacIntyre&quot;</bucket>
              <bucket>&quot;Steve Chapman&quot;</bucket>
              <bucket>&quot;Russell Applegate&quot;</bucket>
              <bucket>&quot;Cynthia Delaney&quot;</bucket>
              <bucket>&quot;Duane Huffman&quot;</bucket>
              <bucket>&quot;Tony Sayre&quot;</bucket>
              <bucket>&quot;Kimberly Carter&quot;</bucket>
              <bucket>&quot;Robert Waldorf&quot;</bucket>
              <bucket>&quot;Brad Norvell&quot;</bucket>
              <bucket>&quot;Ryan Crowe&quot;</bucket>
              <bucket>&quot;Liz Preis&quot;</bucket>
              <bucket>&quot;Marc Crier&quot;</bucket>
              <bucket>&quot;Emily Phan&quot;</bucket>
              <bucket>&quot;Pauline Johnson&quot;</bucket>
              <bucket>&quot;Eric Barreto&quot;</bucket>
              <bucket>&quot;Nick Zandusky&quot;</bucket>
              <bucket>&quot;Ann Steele&quot;</bucket>
              <bucket>&quot;Barry Pond&quot;</bucket>
              <bucket>&quot;Christy Brittain&quot;</bucket>
              <bucket>&quot;Bart Folk&quot;</bucket>
              <bucket>&quot;Adrian Hane&quot;</bucket>
              <bucket>&quot;Christopher Schild&quot;</bucket>
              <bucket>&quot;Jennifer Patt&quot;</bucket>
              <bucket>&quot;Theone Pippenger&quot;</bucket>
              <bucket>&quot;Andrew Allen&quot;</bucket>
              <bucket>&quot;Steven Cartwright&quot;</bucket>
              <bucket>&quot;Melanie Seite&quot;</bucket>
              <bucket>&quot;Michael Moore&quot;</bucket>
              <bucket>&quot;Thomas Brumley&quot;</bucket>
              <bucket>&quot;Brendan Sweed&quot;</bucket>
              <bucket>&quot;Valerie Dominguez&quot;</bucket>
              <bucket>&quot;Laurel Elliston&quot;</bucket>
              <bucket>&quot;Brendan Dodson&quot;</bucket>
              <bucket>&quot;Jason Klamczynski&quot;</bucket>
              <bucket>&quot;Paul Lucas&quot;</bucket>
              <bucket>&quot;Ritsa Hightower&quot;</bucket>
              <bucket>&quot;Anemone Ratner&quot;</bucket>
              <bucket>&quot;Darrin Martin&quot;</bucket>
              <bucket>&quot;Elizabeth Moffitt&quot;</bucket>
              <bucket>&quot;MaryBeth Skach&quot;</bucket>
              <bucket>&quot;Dan Reichenbach&quot;</bucket>
              <bucket>&quot;Karen Carlisle&quot;</bucket>
              <bucket>&quot;Stefanie Holloman&quot;</bucket>
              <bucket>&quot;Patrick Gardner&quot;</bucket>
              <bucket>&quot;Michelle Lonsdale&quot;</bucket>
              <bucket>&quot;Denny Blanton&quot;</bucket>
              <bucket>&quot;Beth Paige&quot;</bucket>
              <bucket>&quot;Carl Jackson&quot;</bucket>
              <bucket>&quot;Thea Hendricks&quot;</bucket>
              <bucket>&quot;Scot Wooten&quot;</bucket>
              <bucket>&quot;Clay Rozendal&quot;</bucket>
              <bucket>&quot;Pauline Webber&quot;</bucket>
              <bucket>&quot;Pierre Wener&quot;</bucket>
              <bucket>&quot;Ross DeVincentis&quot;</bucket>
              <bucket>&quot;Peter Bühler&quot;</bucket>
              <bucket>&quot;Tamara Manning&quot;</bucket>
              <bucket>&quot;Logan Currie&quot;</bucket>
              <bucket>&quot;Dennis Bolton&quot;</bucket>
              <bucket>&quot;Ivan Gibson&quot;</bucket>
              <bucket>&quot;Cynthia Voltz&quot;</bucket>
              <bucket>&quot;Philip Fox&quot;</bucket>
              <bucket>&quot;Matt Collister&quot;</bucket>
              <bucket>&quot;Jas O&apos;Carroll&quot;</bucket>
              <bucket>&quot;Rachel Payne&quot;</bucket>
              <bucket>&quot;Adam Hart&quot;</bucket>
              <bucket>&quot;Sara Luxemburg&quot;</bucket>
              <bucket>&quot;Eleni McCrary&quot;</bucket>
              <bucket>&quot;Sylvia Foulston&quot;</bucket>
              <bucket>&quot;Julie Kriz&quot;</bucket>
              <bucket>&quot;Giulietta Dortch&quot;</bucket>
              <bucket>&quot;Chris McAfee&quot;</bucket>
              <bucket>&quot;Mary Zewe&quot;</bucket>
              <bucket>&quot;Carol Darley&quot;</bucket>
              <bucket>&quot;Ann Blume&quot;</bucket>
              <bucket>&quot;Cathy Armstrong&quot;</bucket>
              <bucket>&quot;Liz MacKendrick&quot;</bucket>
              <bucket>&quot;Sandra Flanagan&quot;</bucket>
              <bucket>&quot;John Castell&quot;</bucket>
              <bucket>&quot;Raymond Messe&quot;</bucket>
              <bucket>&quot;Dorris liebe&quot;</bucket>
              <bucket>&quot;Rick Hansen&quot;</bucket>
              <bucket>&quot;Joel Jenkins&quot;</bucket>
              <bucket>&quot;Katherine Hughes&quot;</bucket>
              <bucket>&quot;Max Ludwig&quot;</bucket>
              <bucket>&quot;Paul Stevenson&quot;</bucket>
              <bucket>&quot;Barbara Fisher&quot;</bucket>
              <bucket>&quot;Olvera Toch&quot;</bucket>
              <bucket>&quot;Sanjit Jacobs&quot;</bucket>
              <bucket>&quot;Ricardo Sperren&quot;</bucket>
              <bucket>&quot;Mitch Gastineau&quot;</bucket>
              <bucket>&quot;Doug O&apos;Connell&quot;</bucket>
              <bucket>&quot;Bill Stewart&quot;</bucket>
              <bucket>&quot;Mark Van Huff&quot;</bucket>
              <bucket>&quot;Naresj Patel&quot;</bucket>
              <bucket>&quot;Jim Mitchum&quot;</bucket>
              <bucket>&quot;Juliana Krohn&quot;</bucket>
              <bucket>&quot;Tracy Poddar&quot;</bucket>
              <bucket>&quot;Brian Thompson&quot;</bucket>
              <bucket>&quot;Sally Hughsby&quot;</bucket>
              <bucket>&quot;Lori Olson&quot;</bucket>
              <bucket>&quot;Karl Braun&quot;</bucket>
              <bucket>&quot;Lindsay Shagiari&quot;</bucket>
              <bucket>&quot;Eudokia Martin&quot;</bucket>
              <bucket>&quot;Ken Dana&quot;</bucket>
              <bucket>&quot;Sung Pak&quot;</bucket>
              <bucket>&quot;Cathy Prescott&quot;</bucket>
              <bucket>&quot;Matt Collins&quot;</bucket>
              <bucket>&quot;Christine Phan&quot;</bucket>
              <bucket>&quot;Patrick Bzostek&quot;</bucket>
              <bucket>&quot;David Wiener&quot;</bucket>
              <bucket>&quot;Brenda Bowman&quot;</bucket>
              <bucket>&quot;Deanra Eno&quot;</bucket>
              <bucket>&quot;Arthur Gainer&quot;</bucket>
              <bucket>&quot;Jonathan Doherty&quot;</bucket>
              <bucket>&quot;Jamie Frazer&quot;</bucket>
              <bucket>&quot;Troy Staebel&quot;</bucket>
              <bucket>&quot;Jill Matthias&quot;</bucket>
              <bucket>&quot;David Smith&quot;</bucket>
              <bucket>&quot;Harold Engle&quot;</bucket>
              <bucket>&quot;Steve Carroll&quot;</bucket>
              <bucket>&quot;Hallie Redmond&quot;</bucket>
              <bucket>&quot;James Lanier&quot;</bucket>
              <bucket>&quot;Kristina Nunn&quot;</bucket>
              <bucket>&quot;Sung Chung&quot;</bucket>
              <bucket>&quot;Shahid Collister&quot;</bucket>
              <bucket>&quot;Fred Wasserman&quot;</bucket>
              <bucket>&quot;Stephanie Phelps&quot;</bucket>
              <bucket>&quot;Dave Hallsten&quot;</bucket>
              <bucket>&quot;Nick Radford&quot;</bucket>
              <bucket>&quot;Sarah Brown&quot;</bucket>
              <bucket>&quot;Gary McGarr&quot;</bucket>
              <bucket>&quot;Rick Huthwaite&quot;</bucket>
              <bucket>&quot;Janet Martin&quot;</bucket>
              <bucket>&quot;Pete Kriz&quot;</bucket>
              <bucket>&quot;Larry Blacks&quot;</bucket>
              <bucket>&quot;Thomas Thornton&quot;</bucket>
              <bucket>&quot;Eugene Hildebrand&quot;</bucket>
              <bucket>&quot;Daniel Byrd&quot;</bucket>
              <bucket>&quot;Tiffany House&quot;</bucket>
              <bucket>&quot;Luke Schmidt&quot;</bucket>
              <bucket>&quot;Deborah Brumfield&quot;</bucket>
              <bucket>&quot;Giulietta Baptist&quot;</bucket>
              <bucket>&quot;Michael Paige&quot;</bucket>
              <bucket>&quot;Bill Donatelli&quot;</bucket>
              <bucket>&quot;Paul Gonzalez&quot;</bucket>
              <bucket>&quot;Angele Hood&quot;</bucket>
              <bucket>&quot;Jennifer Halladay&quot;</bucket>
              <bucket>&quot;Vivek Sundaresam&quot;</bucket>
              <bucket>&quot;Greg Hansen&quot;</bucket>
              <bucket>&quot;Shirley Jackson&quot;</bucket>
              <bucket>&quot;Adrian Shami&quot;</bucket>
              <bucket>&quot;Helen Andreada&quot;</bucket>
              <bucket>&quot;Dionis Lloyd&quot;</bucket>
              <bucket>&quot;Ted Butterfield&quot;</bucket>
              <bucket>&quot;Nora Pelletier&quot;</bucket>
              <bucket>&quot;Erica Hackney&quot;</bucket>
              <bucket>&quot;Pete Armstrong&quot;</bucket>
              <bucket>&quot;Gene McClure&quot;</bucket>
              <bucket>&quot;Mark Haberlin&quot;</bucket>
              <bucket>&quot;Jay Kimmel&quot;</bucket>
              <bucket>&quot;Natalie Fritzler&quot;</bucket>
              <bucket>&quot;Craig Yedwab&quot;</bucket>
              <bucket>&quot;Speros Goranitis&quot;</bucket>
              <bucket>&quot;Alan Dominguez&quot;</bucket>
              <bucket>&quot;Arianne Irving&quot;</bucket>
              <bucket>&quot;Hunter Glantz&quot;</bucket>
              <bucket>&quot;Barry Gonzalez&quot;</bucket>
              <bucket>&quot;Joel Eaton&quot;</bucket>
              <bucket>&quot;Sally Matthias&quot;</bucket>
              <bucket>&quot;Susan MacKendrick&quot;</bucket>
              <bucket>&quot;Bryan Davis&quot;</bucket>
              <bucket>&quot;Clay Cheatham&quot;</bucket>
              <bucket>&quot;Greg Guthrie&quot;</bucket>
              <bucket>&quot;Justin MacKendrick&quot;</bucket>
              <bucket>&quot;Logan Haushalter&quot;</bucket>
              <bucket>&quot;Ken Heidel&quot;</bucket>
              <bucket>&quot;Tony Molinari&quot;</bucket>
              <bucket>&quot;Trudy Brown&quot;</bucket>
              <bucket>&quot;Lynn Smith&quot;</bucket>
              <bucket>&quot;Toby Carlisle&quot;</bucket>
              <bucket>&quot;Fred Chung&quot;</bucket>
              <bucket>&quot;Frank Atkinson&quot;</bucket>
              <bucket>&quot;Rob Beeghly&quot;</bucket>
              <bucket>&quot;Ed Braxton&quot;</bucket>
              <bucket>&quot;Mick Hernandez&quot;</bucket>
              <bucket>&quot;Darrin Sayre&quot;</bucket>
              <bucket>&quot;Edward Becker&quot;</bucket>
              <bucket>&quot;Lindsay Williams&quot;</bucket>
              <bucket>&quot;Lela Donovan&quot;</bucket>
              <bucket>&quot;Chuck Magee&quot;</bucket>
              <bucket>&quot;Maya Herman&quot;</bucket>
              <bucket>&quot;Roy Skaria&quot;</bucket>
              <bucket>&quot;Harold Ryan&quot;</bucket>
              <bucket>&quot;Bradley Talbott&quot;</bucket>
              <bucket>&quot;Nona Balk&quot;</bucket>
              <bucket>&quot;Katherine Murray&quot;</bucket>
              <bucket>&quot;Troy Blackwell&quot;</bucket>
              <bucket>&quot;Craig Reiter&quot;</bucket>
              <bucket>&quot;Bruce Geld&quot;</bucket>
              <bucket>&quot;Dean Braden&quot;</bucket>
              <bucket>&quot;Brian Dahlen&quot;</bucket>
              <bucket>&quot;Adam Shillingsburg&quot;</bucket>
              <bucket>&quot;Maureen Fritzler&quot;</bucket>
              <bucket>&quot;Lindsay Castell&quot;</bucket>
              <bucket>&quot;Duane Benoit&quot;</bucket>
              <bucket>&quot;Phillip Breyer&quot;</bucket>
              <bucket>&quot;Kelly Andreada&quot;</bucket>
              <bucket>&quot;Tony Chapman&quot;</bucket>
              <bucket>&quot;Liz Willingham&quot;</bucket>
              <bucket>&quot;Dorothy Dickinson&quot;</bucket>
              <bucket>&quot;Filia McAdams&quot;</bucket>
              <bucket>&quot;Michael Nguyen&quot;</bucket>
              <bucket>&quot;Christine Kargatis&quot;</bucket>
              <bucket>&quot;Lycoris Saunders&quot;</bucket>
              <bucket>&quot;Jim Epp&quot;</bucket>
              <bucket>&quot;Nicole Fjeld&quot;</bucket>
              <bucket>&quot;Matt Connell&quot;</bucket>
              <bucket>&quot;Dana Kaydos&quot;</bucket>
              <bucket>&quot;Mike Vittorini&quot;</bucket>
              <bucket>&quot;Jessica Myrick&quot;</bucket>
              <bucket>&quot;Sue Ann Reed&quot;</bucket>
              <bucket>&quot;Ken Black&quot;</bucket>
              <bucket>&quot;Ben Peterman&quot;</bucket>
              <bucket>&quot;Lisa Hazard&quot;</bucket>
              <bucket>&quot;Nick Crebassa&quot;</bucket>
              <bucket>&quot;Clay Ludtke&quot;</bucket>
              <bucket>&quot;Cari Schnelling&quot;</bucket>
              <bucket>&quot;Jeremy Ellison&quot;</bucket>
              <bucket>&quot;Charles Crestani&quot;</bucket>
              <bucket>&quot;Justin Ritter&quot;</bucket>
              <bucket>&quot;Xylona Preis&quot;</bucket>
              <bucket>&quot;Jenna Caffey&quot;</bucket>
              <bucket>&quot;Pamela Stobb&quot;</bucket>
              <bucket>&quot;Darren Koutras&quot;</bucket>
              <bucket>&quot;Katrina Edelman&quot;</bucket>
              <bucket>&quot;Tim Taslimi&quot;</bucket>
              <bucket>&quot;Marina Lichtenstein&quot;</bucket>
              <bucket>&quot;Stuart Calhoun&quot;</bucket>
              <bucket>&quot;Philip Brown&quot;</bucket>
              <bucket>&quot;Michelle Moray&quot;</bucket>
              <bucket>&quot;Roland Murray&quot;</bucket>
              <bucket>&quot;Guy Phonely&quot;</bucket>
              <bucket>&quot;Toby Braunhardt&quot;</bucket>
              <bucket>&quot;Michael Stewart&quot;</bucket>
              <bucket>&quot;Dorothy Badders&quot;</bucket>
              <bucket>&quot;Maribeth Dona&quot;</bucket>
              <bucket>&quot;Russell D&apos;Ascenzo&quot;</bucket>
              <bucket>&quot;Scott Cohen&quot;</bucket>
              <bucket>&quot;Rob Haberlin&quot;</bucket>
              <bucket>&quot;Anthony Witt&quot;</bucket>
              <bucket>&quot;Michael Chen&quot;</bucket>
              <bucket>&quot;Craig Molinari&quot;</bucket>
              <bucket>&quot;Ed Jacobs&quot;</bucket>
              <bucket>&quot;Jeremy Farry&quot;</bucket>
              <bucket>&quot;Giulietta Weimer&quot;</bucket>
              <bucket>&quot;Corey-Lock&quot;</bucket>
              <bucket>&quot;Jeremy Lonsdale&quot;</bucket>
              <bucket>&quot;Ivan Liston&quot;</bucket>
              <bucket>&quot;Paul MacIntyre&quot;</bucket>
              <bucket>&quot;Lena Cacioppo&quot;</bucket>
              <bucket>&quot;Alan Shonely&quot;</bucket>
              <bucket>&quot;Lena Creighton&quot;</bucket>
              <bucket>&quot;Anthony Jacobs&quot;</bucket>
              <bucket>&quot;Suzanne McNair&quot;</bucket>
              <bucket>&quot;Lisa DeCherney&quot;</bucket>
              <bucket>&quot;Shaun Weien&quot;</bucket>
              <bucket>&quot;Ed Ludwig&quot;</bucket>
              <bucket>&quot;Maris LaWare&quot;</bucket>
              <bucket>&quot;Maurice Satty&quot;</bucket>
              <bucket>&quot;Laurel Workman&quot;</bucket>
              <bucket>&quot;Theresa Swint&quot;</bucket>
              <bucket>&quot;Joni Blumstein&quot;</bucket>
              <bucket>&quot;Roland Fjeld&quot;</bucket>
              <bucket>&quot;Sam Craven&quot;</bucket>
              <bucket>&quot;Barry Franz&quot;</bucket>
              <bucket>&quot;Karen Seio&quot;</bucket>
              <bucket>&quot;Thais Sissman&quot;</bucket>
              <bucket>&quot;Daniel Lacy&quot;</bucket>
              <bucket>&quot;Michelle Arnett&quot;</bucket>
              <bucket>&quot;Anthony O&apos;Donnell&quot;</bucket>
              <bucket>&quot;Valerie Takahito&quot;</bucket>
              <bucket>&quot;Resi Pölking&quot;</bucket>
              <bucket>&quot;Peter Fuller&quot;</bucket>
              <bucket>&quot;Shahid Hopkins&quot;</bucket>
              <bucket>&quot;Ken Brennan&quot;</bucket>
              <bucket>&quot;Scott Williamson&quot;</bucket>
              <bucket>&quot;Jack Lebron&quot;</bucket>
              <bucket>&quot;Frank Gastineau&quot;</bucket>
              <bucket>&quot;Sean Wendt&quot;</bucket>
              <bucket>&quot;Trudy Schmidt&quot;</bucket>
              <bucket>&quot;Jennifer Jackson&quot;</bucket>
              <bucket>&quot;Peter McVee&quot;</bucket>
              <bucket>&quot;Fred McMath&quot;</bucket>
              <bucket>&quot;Dean Katz&quot;</bucket>
              <bucket>&quot;Alex Grayson&quot;</bucket>
              <bucket>&quot;Lena Hernandez&quot;</bucket>
              <bucket>&quot;Kean Takahito&quot;</bucket>
              <bucket>&quot;Brian DeCherney&quot;</bucket>
              <bucket>&quot;Bart Pistole&quot;</bucket>
              <bucket>&quot;Alex Avila&quot;</bucket>
              <bucket>&quot;Stuart Van&quot;</bucket>
              <bucket>&quot;Brad Eason&quot;</bucket>
              <bucket>&quot;Chloris Kastensmidt&quot;</bucket>
              <bucket>&quot;Phillip Flathmann&quot;</bucket>
              <bucket>&quot;Barry Französisch&quot;</bucket>
              <bucket>&quot;Brad Thomas&quot;</bucket>
              <bucket>&quot;Sonia Cooley&quot;</bucket>
              <bucket>&quot;Frank Preis&quot;</bucket>
              <bucket>&quot;Jocasta Rupert&quot;</bucket>
              <bucket>&quot;Annie Zypern&quot;</bucket>
              <bucket>&quot;Anna Gayman&quot;</bucket>
              <bucket>&quot;Benjamin Patterson&quot;</bucket>
              <bucket>&quot;Victoria Brennan&quot;</bucket>
              <bucket>&quot;Ryan Akin&quot;</bucket>
              <bucket>&quot;Lauren Leatherbury&quot;</bucket>
              <bucket>&quot;Harold Pawlan&quot;</bucket>
              <bucket>&quot;Ann Chong&quot;</bucket>
              <bucket>&quot;Dorothy Wardle&quot;</bucket>
              <bucket>&quot;Rose O&apos;Brian&quot;</bucket>
              <bucket>&quot;Erin Ashbrook&quot;</bucket>
              <bucket>&quot;Christine Abelman&quot;</bucket>
              <bucket>&quot;Debra Catini&quot;</bucket>
              <bucket>&quot;Beth Thompson&quot;</bucket>
              <bucket>&quot;Michelle Huthwaite&quot;</bucket>
              <bucket>&quot;Luke Weiss&quot;</bucket>
              <bucket>&quot;Khloe Miller&quot;</bucket>
              <bucket>&quot;Maureen Gnade&quot;</bucket>
              <bucket>&quot;Joseph Airdo&quot;</bucket>
              <bucket>&quot;David Philippe&quot;</bucket>
              <bucket>&quot;Pauline Chand&quot;</bucket>
              <bucket>&quot;Erin Creighton&quot;</bucket>
              <bucket>&quot;Sarah Foster&quot;</bucket>
              <bucket>&quot;Noel Staavos&quot;</bucket>
              <bucket>&quot;Mike Caudle&quot;</bucket>
              <bucket>&quot;Erica Hernandez&quot;</bucket>
              <bucket>&quot;Meg Tillman&quot;</bucket>
              <bucket>&quot;George Ashbrook&quot;</bucket>
              <bucket>&quot;Guy Thornton&quot;</bucket>
              <bucket>&quot;Aleksandra Gannaway&quot;</bucket>
              <bucket>&quot;Todd Boyes&quot;</bucket>
              <bucket>&quot;Guy Armstrong&quot;</bucket>
              <bucket>&quot;Eileen Kiefer&quot;</bucket>
              <bucket>&quot;Alejandro Ballentine&quot;</bucket>
              <bucket>&quot;Mike Kennedy&quot;</bucket>
              <bucket>&quot;Allen Armold&quot;</bucket>
              <bucket>&quot;Sibella Parks&quot;</bucket>
              <bucket>&quot;Charles McCrossin&quot;</bucket>
              <bucket>&quot;Henia Zydlo&quot;</bucket>
              <bucket>&quot;Maureen Gastineau&quot;</bucket>
              <bucket>&quot;Kelly Lampkin&quot;</bucket>
              <bucket>&quot;Roy Collins&quot;</bucket>
              <bucket>&quot;Amy Hunt&quot;</bucket>
              <bucket>&quot;Jonathan Howell&quot;</bucket>
              <bucket>&quot;Max Engle&quot;</bucket>
              <bucket>&quot;Edward Hooks&quot;</bucket>
              <bucket>&quot;Susan Vittorini&quot;</bucket>
              <bucket>&quot;Beth Fritzler&quot;</bucket>
              <bucket>&quot;Joni Wasserman&quot;</bucket>
              <bucket>&quot;Vivian Mathis&quot;</bucket>
              <bucket>&quot;George Bell&quot;</bucket>
              <bucket>&quot;Michelle Ellison&quot;</bucket>
              <bucket>&quot;Benjamin Farhat&quot;</bucket>
              <bucket>&quot;Larry Hughes&quot;</bucket>
              <bucket>&quot;Robert Barroso&quot;</bucket>
              <bucket>&quot;Katrina Bavinger&quot;</bucket>
              <bucket>&quot;Darrin Van Huff&quot;</bucket>
              <bucket>&quot;Gary Hansen&quot;</bucket>
              <bucket>&quot;Pete Takahito&quot;</bucket>
              <bucket>&quot;Christina VanderZanden&quot;</bucket>
              <bucket>&quot;Darren Budd&quot;</bucket>
              <bucket>&quot;Jesus Ocampo&quot;</bucket>
              <bucket>&quot;Evan Bailliet&quot;</bucket>
              <bucket>&quot;Julia Dunbar&quot;</bucket>
              <bucket>&quot;Susan Gilcrest&quot;</bucket>
              <bucket>&quot;Mike Pelletier&quot;</bucket>
              <bucket>&quot;Mark Hamilton&quot;</bucket>
              <bucket>&quot;Cyma Kinney&quot;</bucket>
              <bucket>&quot;Matt Abelman&quot;</bucket>
              <bucket>&quot;Mary O&apos;Rourke&quot;</bucket>
              <bucket>&quot;Stephanie Ulpright&quot;</bucket>
              <bucket>&quot;Bruce Stewart&quot;</bucket>
              <bucket>&quot;Georgia Rosenberg&quot;</bucket>
              <bucket>&quot;John Stevenson&quot;</bucket>
              <bucket>&quot;Sean Christensen&quot;</bucket>
              <bucket>&quot;Allen Goldenen&quot;</bucket>
              <bucket>&quot;Alyssa Crouse&quot;</bucket>
              <bucket>&quot;Zuschuss Carroll&quot;</bucket>
              <bucket>&quot;Dan Lawera&quot;</bucket>
              <bucket>&quot;Don Weiss&quot;</bucket>
              <bucket>&quot;Brooke Gillingham&quot;</bucket>
              <bucket>&quot;Shirley Schmidt&quot;</bucket>
              <bucket>&quot;Bill Overfelt&quot;</bucket>
              <bucket>&quot;Patrick Ryan&quot;</bucket>
              <bucket>&quot;Joseph Holt&quot;</bucket>
              <bucket>&quot;Tracy Collins&quot;</bucket>
              <bucket>&quot;Nora Preis&quot;</bucket>
              <bucket>&quot;Kalyca Meade&quot;</bucket>
              <bucket>&quot;Aaron Smayling&quot;</bucket>
              <bucket>&quot;Tom Zandusky&quot;</bucket>
              <bucket>&quot;David Flashing&quot;</bucket>
              <bucket>&quot;Shaun Chance&quot;</bucket>
              <bucket>&quot;John Lucas&quot;</bucket>
              <bucket>&quot;Tom Prescott&quot;</bucket>
              <bucket>&quot;Jasper Cacioppo&quot;</bucket>
              <bucket>&quot;Mick Crebagga&quot;</bucket>
              <bucket>&quot;Stewart Carmichael&quot;</bucket>
              <bucket>&quot;Barry Blumstein&quot;</bucket>
              <bucket>&quot;Victoria Wilson&quot;</bucket>
              <bucket>&quot;Michael Oakman&quot;</bucket>
              <bucket>&quot;Brendan Murry&quot;</bucket>
              <bucket>&quot;Matt Hagelstein&quot;</bucket>
              <bucket>&quot;Tracy Blumstein&quot;</bucket>
              <bucket>&quot;Julia Barnett&quot;</bucket>
              <bucket>&quot;Edward Nazzal&quot;</bucket>
              <bucket>&quot;Duane Noonan&quot;</bucket>
              <bucket>&quot;Cassandra Brandow&quot;</bucket>
              <bucket>&quot;Zuschuss Donatelli&quot;</bucket>
              <bucket>&quot;Cindy Schnelling&quot;</bucket>
              <bucket>&quot;Anthony Garverick&quot;</bucket>
              <bucket>&quot;Andy Gerbode&quot;</bucket>
              <bucket>&quot;Ken Lonsdale&quot;</bucket>
              <bucket>&quot;Mitch Willingham&quot;</bucket>
              <bucket>&quot;Roy Phan&quot;</bucket>
              <bucket>&quot;Shahid Shariari&quot;</bucket>
              <bucket>&quot;Charlotte Melton&quot;</bucket>
              <bucket>&quot;Vicky Freymann&quot;</bucket>
              <bucket>&quot;Emily Burns&quot;</bucket>
              <bucket>&quot;Sample Company A&quot;</bucket>
              <bucket>&quot;Stefania Perrino&quot;</bucket>
              <bucket>&quot;Joni Sundaresam&quot;</bucket>
              <bucket>&quot;Christine Sundaresam&quot;</bucket>
              <bucket>&quot;Chad Sievert&quot;</bucket>
              <bucket>&quot;Greg Maxwell&quot;</bucket>
              <bucket>&quot;Rick Reed&quot;</bucket>
              <bucket>&quot;Linda Southworth&quot;</bucket>
              <bucket>&quot;Dan Campbell&quot;</bucket>
              <bucket>&quot;Tracy Zic&quot;</bucket>
              <bucket>&quot;Joy Smith&quot;</bucket>
              <bucket>&quot;Michael Grace&quot;</bucket>
              <bucket>&quot;Jill Stevenson&quot;</bucket>
              <bucket>&quot;Carl Ludwig&quot;</bucket>
              <bucket>&quot;Michael Kennedy&quot;</bucket>
              <bucket>&quot;Catherine Glotzbach&quot;</bucket>
              <bucket>&quot;Liz Pelletier&quot;</bucket>
              <bucket>&quot;Anna Chung&quot;</bucket>
              <bucket>&quot;Don Miller&quot;</bucket>
              <bucket>&quot;Craig Carreira&quot;</bucket>
              <bucket>&quot;Harry Greene&quot;</bucket>
              <bucket>&quot;Dianna Arnett&quot;</bucket>
              <bucket>&quot;Paul Knutson&quot;</bucket>
              <bucket>&quot;Vivek Gonzalez&quot;</bucket>
              <bucket>&quot;Sean Miller&quot;</bucket>
              <bucket>&quot;Pamela Coakley&quot;</bucket>
              <bucket>&quot;Nat Carroll&quot;</bucket>
              <bucket>&quot;Bobby Trafton&quot;</bucket>
              <bucket>&quot;Darren Powers&quot;</bucket>
              <bucket>&quot;Allen Rosenblatt&quot;</bucket>
              <bucket>&quot;Sung Shariari&quot;</bucket>
              <bucket>&quot;Nancy Lomonaco&quot;</bucket>
              <bucket>&quot;Alan Haines&quot;</bucket>
              <bucket>&quot;Joy Daniels&quot;</bucket>
              <bucket>&quot;Saphhira Shifley&quot;</bucket>
              <bucket>&quot;Kean Thornton&quot;</bucket>
              <bucket>&quot;Herbert Flentye&quot;</bucket>
              <bucket>&quot;Irene Maddox&quot;</bucket>
              <bucket>&quot;Neola Schneider&quot;</bucket>
              <bucket>&quot;Nicole Brennan&quot;</bucket>
              <bucket>&quot;Tanja Norvell&quot;</bucket>
              <bucket>&quot;Nathan Cano&quot;</bucket>
              <bucket>&quot;Tracy Hopkins&quot;</bucket>
              <bucket>&quot;Jim Radford&quot;</bucket>
              <bucket>&quot;Helen Abelman&quot;</bucket>
              <bucket>&quot;Jack Garza&quot;</bucket>
              <bucket>&quot;Tamara Dahlen&quot;</bucket>
              <bucket>&quot;Corinna Mitchell&quot;</bucket>
              <bucket>&quot;Michael Granlund&quot;</bucket>
              <bucket>&quot;Carlos Soltero&quot;</bucket>
              <bucket>&quot;Phillina Ober&quot;</bucket>
              <bucket>&quot;Becky Martin&quot;</bucket>
              <bucket>&quot;Richard Bierner&quot;</bucket>
              <bucket>&quot;John Dryer&quot;</bucket>
              <bucket>&quot;Greg Matthias&quot;</bucket>
              <bucket>&quot;Ralph Kennedy&quot;</bucket>
              <bucket>&quot;Henry Goldwyn&quot;</bucket>
              <bucket>&quot;Valerie Mitchum&quot;</bucket>
              <bucket>&quot;Michelle Tran&quot;</bucket>
              <bucket>&quot;Jay Fein&quot;</bucket>
              <bucket>&quot;Julie Creighton&quot;</bucket>
              <bucket>&quot;Sean Braxton&quot;</bucket>
              <bucket>&quot;David Bremer&quot;</bucket>
              <bucket>&quot;Sharelle Roach&quot;</bucket>
              <bucket>&quot;Denise Monton&quot;</bucket>
              <bucket>&quot;Skye Norling&quot;</bucket>
              <bucket>&quot;Candace McMahon&quot;</bucket>
              <bucket>&quot;Grant Thornton&quot;</bucket>
              <bucket>&quot;Luke Foster&quot;</bucket>
              <bucket>&quot;Cindy Stewart&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Customer Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[sum:Profit:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[sum:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Customer Name:nk]</rows>
        <cols>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{E01D11D0-4E03-4E67-81FC-8177573E9F65}' />
    </worksheet>
    <worksheet name='highlight'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='federated.0u2l00m1qcpaee1fn3urq0huwf2l' />
          </datasources>
          <datasource-dependencies datasource='federated.0u2l00m1qcpaee1fn3urq0huwf2l'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Weekday' name='[wd:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[wd:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{FCF198F5-A8A0-4549-9593-613CC63E4BC2}' />
    </worksheet>
    <worksheet name='month and year'>
      <layout-options>
        <title>
          <formatted-text>
            <run>ship date - which month and year had the highest average ship cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='federated.0u2l00m1qcpaee1fn3urq0huwf2l' />
          </datasources>
          <datasource-dependencies datasource='federated.0u2l00m1qcpaee1fn3urq0huwf2l'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Avg' name='[avg:Shipping Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[tmn:Order Date:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[avg:Shipping Cost:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[avg:Shipping Cost:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[avg:Shipping Cost:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[tmn:Order Date:ok]</rows>
        <cols>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[avg:Shipping Cost:qk]</cols>
      </table>
      <simple-id uuid='{F706C7EF-B85F-4DBA-BC12-D4985A172905}' />
    </worksheet>
    <worksheet name='month of year'>
      <layout-options>
        <title>
          <formatted-text>
            <run>ship date - which month of the year has the highest average ship cost?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='federated.0u2l00m1qcpaee1fn3urq0huwf2l' />
          </datasources>
          <datasource-dependencies datasource='federated.0u2l00m1qcpaee1fn3urq0huwf2l'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Avg' name='[avg:Shipping Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[avg:Shipping Cost:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[mn:Order Date:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[avg:Shipping Cost:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[avg:Shipping Cost:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[avg:Shipping Cost:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[mn:Order Date:ok]</rows>
        <cols>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[avg:Shipping Cost:qk]</cols>
      </table>
      <simple-id uuid='{014B6D7F-5CEE-4530-B2E5-03CFFBCE5884}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[sum:Profit:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Market:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Sub-Category:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Category:nk]</field>
            <field>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Customer Name:nk]</field>
            <field>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Market:nk]</field>
            <field>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C672A587-F3DA-4015-9178-04B7049B6C79}' />
    </window>
    <window class='worksheet' name='month of year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='32'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[avg:Shipping Cost:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[:Measure Names]</field>
            <field>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Category:nk]</field>
            <field>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Customer ID:nk]</field>
            <field>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Customer Name:nk]</field>
            <field>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Year (OrderDate):ok]</field>
            <field>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B8BF0D84-F32E-4464-AFBB-6241B047F19A}' />
    </window>
    <window class='worksheet' name='month and year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='32'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[avg:Shipping Cost:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[:Measure Names]</field>
            <field>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Category:nk]</field>
            <field>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Customer ID:nk]</field>
            <field>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Customer Name:nk]</field>
            <field>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Year (OrderDate):ok]</field>
            <field>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{88FF4A4B-2916-4ED3-84BB-8BC8E8E67594}' />
    </window>
    <window class='worksheet' name='highlight'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[wd:Order Date:ok]</field>
            <field>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1659D386-33E7-4137-94E0-6035B9E79513}' />
    </window>
    <window class='worksheet' name='cycle chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[wd:Ship Date:ok]</field>
            <field>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[yr:Order Date:ok]</field>
            <field>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{05959D2E-D081-43B4-A2D5-6BD5C5484E9E}' />
    </window>
    <window class='worksheet' maximized='true' name='filter top n - parameter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[sum:Profit:qk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u2l00m1qcpaee1fn3urq0huwf2l].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{46965BD2-9F71-49CB-8E85-FE63FA76A21E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='cycle chart' width='192'>
      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
      LJc1/uTv3+DD7xiixWGum/6xkU66Ai5OX1piYjHKWixDsVTGajZgNRm2ff9aTC3H6LkqgP4O
      DxOL+78jrOs6z5+Z5mC3b6+LUpHL8xG+/cIo68kc0KDguLqu82ffO8OVhSivjS3w2Q89hOUO
      XpZzk2E+/uRBVGWzbg/1+LkwvcpQ19YNr+s6//DyZaxmA+9+qGdLk3iKIvPp9x3ZVrnvBF3X
      WVhN0OF3AuC0mkDXSWYKOPfx3Es2X2JmOcbwPhXAxEKUgQ4Pz5+e4hPvGmlMC/Da2CLxdJ7f
      +8L7CQVc/O5Xf8L0UmxbtZmm6yxFkgR9joqfj/T4GZ1Z3Va5xmYjvHhuls/+3EP7bgY7lS2g
      A46bWrqg37nvO8JnrixzqDeAoUIltR+YXIzyrz54lBfPz1EolXdfAPFUjr/60Tn+9TPHMagK
      zz4xxC9/8Ci//61Xef7N6S2LYDmSwm03YzFWbjnaPHZWYxlKW+x8xVM5/s933uDXP/bojrsu
      O8FKNE1ri+0WYQ52evZ1R1jXdV48N8cTh0P7rkKBjfKtxtL0t7cQCjgZnVnbXQHous5XvnuG
      px8/cL3DCnCw289//Oy7eX1skT/89inyWxhbH5+LcCDkpZpdjQaFDp+TqS0sGShrGn/8d6/z
      7BNDdLW6tvw8jWRqKbZpAd6BfT4SlMwUWFpPMhTy7nVRKrIay+CwmjCbVN53vI8fvT65uwJ4
      5eI8uUKJdx/t2fSZ3WrkNz/1GIoi89KF+bp5jc2s1e1YjfT4uDhd2w3SdZ3vvHgJl93Ekw92
      173vXjG1FKW3veWWa+1eO0uR/Xsg+elLSzzY34ayT92f6eUY3W0blcrBbh9LkeTuCSCazPKN
      H1/g888cq2oQRZF5z7Fe3hhfrJlXWdOZWFxnsLN2zXKoN8CFqXDNF2R0Zo2XLszx2Q8+tOXV
      nY1G13XmVuKbWie7xYiqyMRSuT0qWXV0XefkudlNs+j7iSsL6wx0bFQqBlXhsUOh3RGAput8
      9btn+PATQ3idlppp+4MtLKwla+68SmbyKLJc11fv9DtZi2fIFyuvC9qYRzjDrz77MGbT/g1d
      ruk6qezm0R5JkugLtjC5GN2jklUnkc4TS+Wu17D7DV3Xr48AXeNdD3XvjgBeOj9HsVzmyaP1
      hxZVRabD52BmubrvPrkYpbfdXbfGVmQJv9vKcqTyTO2rF+cJBVz0BVsqfr5fCEczuB1mDIqy
      6bONGeH9NyH26ugCx4eCFYeod5vp5RgvnJmpmaZY1oilsvjdN/qiHodldwSwFsvw+aePb8nF
      kCSJ40PtvHGp+qmOo1vw/6/ldag3wPmpzeuCSmWN514c52PvPFg3n71mailKX3tLxQ7/gZCH
      S3ORqm7eXvQPro3+7JX78/KFeb7z0njNSdZ4KofVbMSg3njlJUnaHQF85MQwnjquz80c6qnt
      u2/4bls70+pgt4/RmbVN10+NLhDyu2j37v9dVVNLUXraK7dSrS12oqlcxeXfuUKJL3/1BV69
      OH/HQihrGj84dYVLcxEKxfKW8lmNZcgXS3RenbRrJLquMzqzSipbYC1e/SjYyaujard7JPvC
      Efa7rWg6RBJZfC7rLZ/lCiWiya1vB+xqdbG4lqBU1q43x8VSmedOjvPFT7xtX45P387UUown
      K4ycwYab57abiMSzt0wKarrOV777Jn1BN8+9OM5aPMuH3j6wrefVdZ2//OE55lcTnJ8KMx9O
      YLMY6Q+2MNTl43BfYGNG+jZeHZ3n0YMde2LbTK5IKlPgPcd6efPyMk892l8x3ZX5ypXovhiv
      kiSJw73+iq7LXDhOh8+x5aE1k0HF77Yxv3rjwORTowt0BpxVZ5EbSaFY5h9fvswf/e0ptAq1
      a7FUZjWWqdpSSZLEQIeHK7ftf/jJm9MkMwU+84EH+A+fOcG5yRW+/sNzW54YBHjpwjwTC1H+
      /aef4Dc/9Tj/4wsf4IufeBvD3Ruz7F/60+d5/s3pW/LUdZ1XLi7w9pHOLd9nJ5lbTdAZcHLs
      QDunL1d3o6eXY/RU6KDvCwEAHDsQ5PT40qYmd3w2sq31PQDD3T7GrrpBmqbz3MlxPnp1i+Ne
      oWk6L1+Y57f/7z+zGkuTzZd4/vT0pnTxdB6H1VhxT8I1Bju9XLppQmx2Jc53XrrErz57HEWW
      sVmM/NbPP04mV+D3v/Uq+WL9ica5cJxvPn+Bf/vxR6+3nKoi43fbeOxQJ5/7uWP87i89ybnJ
      Ff7T137K1NLGwryVaBpd12nbYdeyUCpvaeHkhalVDvX46WlzE46myeSKm9KUyhqrsXTFSmXb
      LtDl0XOsRXOEQh5W1tJ09fTib7n7mrW33c38aoJiWcOobox+6LrO6OwaH35iaFt5He4N8Pcv
      jvPUo/28cnGeUKuLjj2q/XVd59JchL/60XlcdhO/8anHaPfYSWYLfOlPn+eB/lb87htu33w4
      UdeX7mlz850XxwFIZwv8wbdP8YWPPIzLfmM1q6rIfP7p4/zdyTH+y9dP8sVPvL3qatdUtsDv
      f+sUn3/mON7bXNCbaXFY+Dcfe5SL06v87+feYLjbhypLPH44hHyX7k+xVGZ5PcXZiRXOT4aZ
      XIryzONDPPP4gZrfG5tZ5ReeehBVkRkKebk4vcrDw8Fb0qzG0rjtZgzq5lG1bQugo6ODbDmM
      xWTGoKRIpjJ4Xba7DgSlytDqsTExH7m+KaVc1lhaS9LusVIqbX2tf9BrY3EtSTqb529/NsYX
      P/5IQwMzlcvl6/f71k/HOD8V5lPvHmEo5EOSNj63GhU+8o4hvvrdN/mNT77t+ncnFiN0tzpr
      Pq/bbiSZLZDM5PjKP57hHYc76W1zVfzOs48P4rIZ+d2vPM97j/fy3mM9mI03fnZN1/mTv3+d
      E0dCHOhs2ZKdh0IefveXTvD9Vyd47sVL/N6vvbfq98rljY50tc8LxTJf+d5Zriys43FYONTj
      46MnhlBkiT//wTk++Ghf1XKUyxrhWBqfy0ypVOKhwVZOjc1zdCBwS7qpxSihQGWbbjsu0Nm3
      LtJ3YBhJ0fF5W4gm08hyK7IsoyjKXXWEHhnu4MxEmIM9Gw+wnkxjNRuwW83bytemKLhsJr53
      apKuVhcdfldDO2iKoqAoCqqq8swTQ/yLdx2qOCT8zgd7eG1skVdGF3nHkS4AppcTPPvEgbpn
      DHf6nfzFD86h6TrPPDFcc8j5Pcf6eGS4k+++cpnf+dOf8MSRLp56pB+H1ch3To5hVBWeeWJo
      WzZSVZWPvvMgHz4xjFwjHpSiKDUPyn5tfIlSWeO//er7Mary9Xx0XadQKhNLFfC5K7dK0yvr
      dPidWM0bHfMjfW1848cX0ZFuqe0nl2IcCHkrlmGbfQCJA0NDyJKE0+XGZLYxdKB3e1nU4Ehf
      gHMTK9f7AeOzawyFvNt+eSVJYqTXz7d/OspH3jG8pyM/VpOh6sspyxK//KGH+OZPLhJP59B1
      CEfTBFrq+9MDHR4uTIf5/DP151skScJpM/Hz7z3Mf/zcu1EVmS995Xn+8NuneOXCAp/7uWN3
      ZCNJklBk+Y7tq+s6J9+a4/2P9GEy3Fp5SpLEQ4O1O7Yb80P+639bTCpel/WWARBd15lcitIf
      rDyMvk0ByHj9fvx+L6pqwOv1ou7gehq/24bOxnAowOjsrQ+4HY4dCPLBRwcIBRo/Nr0dfC4r
      Tz92gD///ltk80VK5TJOq7Hu995zrJcv/dKTt4Rv2QpOq4mPnhjmv/7K+xjq8vHvPvl2rOa9
      WQ6eSOdZWk8yXGWQ47FDnVXnNHQdLkyFOdx74/2QJIlHhoOcGr2xtqys6cRSuarzUvtmFOga
      h3r8XJhavb52o7/jzpYt9Adb+IWnHtjh0u0O7z7WQyyd47mTY3T6nVuqUZ02E61baCmqYTaq
      fOCR/j0Nt/j6+BIPDbRXHfEK+hwk0gWSmcKmzwqlEuFoetOAwdGBNs5OLF8XzXoyi81sxGTY
      3AGGfSiAYwfaOX1piXg6j67ruO1bn1G+nXth0gtAkWU+96GH+IeXL1edAb7f2Fg+Mcs7Hqi+
      fEJVZB7ob63oBoWjaTxOy6a1R363FV3n+qzwxMI6/cGWqu/CvhNAb7ubmZUYU0tRuttcVTfA
      3G+0e+38yrPHOX6gfa+L0hCiyRzJbIGuQO0NSW8b6eDViwubYjFdmF5lpMe/6cWWJIkH+1s5
      O7ECwJWFKAM1Qt3sOwFYTAbavQ6++8rlqr7h/YgkSbzzwe59u0Ntp3np/BxvH+moO8Pf39HC
      SjRFKpu/5fro9CojVfqHx4eCvD62iK7rVzcWVV+ive8EAPDwUDuvjy1tewZYcG+gaRvuz4kH
      6u/IU2SZQz3+WyL/lTWN2XCC7rbKlUV3q4vl9RSpbJFIPEu7p/ok6L4UwNHBdnwu6y0zpIL7
      h8W1JKqi3LI2vxZvG+nklZtGg5bXrwZIqLJBymhQGOz08LO3ZvA4LTWHifelALxOC//9196H
      ybAvFqsKdpgXz8/yxJHQlvt3gx0eppfj1xfhjc9GGO6qvT32keEOvv3TUXrr7FDblwKAjXUn
      gvsPXdd5fWyJR25br1MLk1FlKOTl3OTGnpELU6uM9ARqfudIX4BEOl93GL2qAHRdJ5Pdf5uv
      Bfc2E4tR3HbTtjZMAbz9UCcvX5hH03VmVjaHjLkdi8nA+x7u40CdEC1VBRCNJ/jjr/w1iWR6
      WwUVCGrxs7MznHiwe9tzNEf6Alyai7C8nsZkULFtYfb6808f27TB6nYqCuDi+AS/90d/hqIo
      LIc3by8UCO6EQrHM2YkVHh7auvtzDYOq0NPm5h9eGme4a2vrw7ZyaGNFARhUlZGhfp7+wJMc
      6N+/waME9xbjc2t0BVxY7jAkzWOHOvnBqQkO9db2/7dDxZJ0dwUZ6OsSR/IIdpTXxhZ55x24
      P9c41OvHbTfXPMRku0h6lW3/2WwGi8VKNpvFYqnfYYnH4zidW1vIdb+TSqUwm8111/Q3A9ls
      FlmWMZlMZPNFTEb1rnaPRRLZusHWtkPFX6hcyPKNv/wanT2DJHJlPvb0Uzt2Q0HzcidnQtzO
      Tr78UEUAsmrigQeOYnPYWE3v26kCgeCuqfh2S7JMsZhj9NIspez+i0MpEOwUVav3o0eP4rDb
      6BvY23AiAsFuUlUAb515k+6+Xs6debOR5REIGkpVAXQG27l44QL2llvHXLVymdJNoS7262EN
      AsFWqNgJDs9eQvX18+zTBzl//twtn01NjLO6mqIj5CUaT2N1BhjobmtIYQWCnaaiACTKvPry
      y/S2u5hZinH48I3P/F4vWc1IIVtm5PAhJi9No2naXQfGup+4OTBWs1MvMNZeU1EA/q6DPGZy
      Eo5l+cB7b46sUOKN028R6hvEYigxemEUi8OLLMs7EhjrfuHmwFjNTr3AWHtN1VLpWplELMLp
      19cZHDmCx2EBFB4/cQJdkjAZjfiKRQyG/XfEqECwVap2gq9MTtLW3s7a6jJvvvH61asSJrMZ
      s8mEJEkYjUZR4wvuaaq2AMP9Pbxw6izeti5CbWJzuuD+pGoLsLS0SCGfI53J0d21N4cfCAS7
      TVUBpJJp7C4XdruIzCC4f6kogPjqPJjtZFMpsS9YcF9TUQAWRws93SEsJhNdncL9Edy/VBSA
      0Wxj8vI4gwdHuDJ+odFlEggaRtU+gN1s5I03XmdlcY6XTgsRCO5PqgrA3eJGlRUGjjzM48cO
      NbJMAkHDqCqAhbkFSlqZMy8/L1oAwX1LRQGsL05SMjowKAoHH3pMtACC+5aKM8GuQIiDqhld
      B4urOeLVC5qTigJQVANXJq4QaA1itOzdGVICwW5TUQCRhQmuTM4hz6/g9ofo7hAbXgT3JxX7
      AJqm8a4PfhS3iX27kUEg2AkqCqCQS/HayR9iDh7GZRZ7fgX3LxVdoGD/A5jcnbT4fOQymUaX
      SSBoGFUCYyn4/H4USSIejzW6TAJBw6i6IaZULFAolkil0miaXvOgMYHgXqWqAM68dpKVaJal
      xQXmVxO854mHG1kugaAhVF8L5HRQ1sHX0YfXbrx+fe7KBaaX14mtLnLm7DlWo8mGFFQg2A2q
      tgAGkxlZknnk0Udo992YDfZ6PcwlCuSkDLquo4OIC3QbIi7QDe7JuEAAbo8PszLDD3/8Ar/4
      yWevXzcajUARly+Ir13i4tgsgZYhERfoJkRcoBvcs3GBNF3mwMFDuNZvPiVSY2pmkVwJ8i4z
      0zNL9A70N6CYAsHuUFEAy5Nv8aOXR8mmIjz1sV+86ROZwZEj1/9yu2uf1SoQ7HcqdoJb2nro
      6/JjUBXGL11udJkEgoZR9ZC8a5RKpS35b+KQvBuIQ/JucPMhefuRugeAiR9RcD8jTsATNDVC
      AIKmRghA0NQIAQiaGiEAQVMjBCBoaoQABE2NEICgqRECEDQ1QgCCpkYIQNDUCAEImhohAEFT
      IwQgaGqEAARNjRCAoKkRAhA0Ndve7jU9doayoxO/qcjE3DKtnX0E/eIUGcG9ybYFEAx2MBUt
      sZZKcvjoEaYuzaB5HSIw1k2IwFg3uGcDY1VDVmSgjCyVSSVTlJCRZVkExroJERjrBvs9MNY2
      +wAaU7PLFFMRWrv7WQ+vMdDfvTslEwgaQN2wKFtFhEW5gQiLcoN7PiyKQHA/IwQgaGqEAARN
      jRCAoKkRAhA0NUIAgqZGCEDQ1AgBCJoaIQBBUyMEIGhqhAAETY0QgKCpEQIQNDVCAIKmRghA
      0NQIAQiaGiEAQVMjBCBoaoQABE3NHQugXMwTDodJZ/M7WR6BoKHcsQBWFmdJZos7WRaBoOHc
      cdgCl9tDfGGRmfkSw/0hERjrJkRgrBvcd4GxrpHP5ymVypgsqgiMdRsiMNYN9ntgrDsulScQ
      xBMI7mRZBIKGI0aBBE2NEICgqRECEDQ1QgCCpkYIQNDUCAEImhohAEFTIwQgaGqEAARNzfWZ
      4EKhgKZpd5xRoVAgnxcrQ2HDFpIk7dv1L42kUCggyzI7dBDRjnPLUoi7WccjSVLF75fLZRRF
      ueWaruvouo4sy3XTVru+nbSaplUs327d79q9tnK/Rtui0fe7RqNsv53fWtf1GwIwGo0VC75V
      crkcRqNx0411Xd+oDYtFFFVFkqTrtUG1tLdT6frN14qFPMgKqqICldNu3E8nnythMsrkimCx
      bC7vjbwhl81jtpi3UDadXLaI2bJxDlaxWMRoNG5aALabtriWR6lQQJdlFEXFuBVbmBRyBa2O
      LSRy2dwWbXGr3TRNq3hG2HVblIrIiop8Nb96v/W2bFEsogOKaqhqC+XLX/7ylzflfAfk83lM
      JtOmm1z7O5uKMzUzy+paFLvTiUHdrGhJkiiX8szPzhONxYgn0jhczuvGqZRvIRPj5A9fQnEa
      KOom7GZDxbSSJBGLzPHSy+cpFqIkCya8blvFZ7mW9+hbb1JEQZIVTMbN+d5Iq3P2jdeRDCZk
      RQVdQ1XVTbXstXzzmSRT0zOsrEWw2Z0YDZvXJEqShKYVmZ+ZIxqLEYslsbucKFVsIUkS5WKG
      kz/6KbJVIZNXcdk3H0x3LW0yusTJl85QLCSIZRX8HkdNW1y6eIZMSUKWFcymypXltbTnz5ym
      rBiQZRVZ2rh+e2VwvfLKpZmammFldQ2zzV7Rzhtpy8xNz163hdXhQJU3d2Fv1P4FXvrxC0hG
      ifWkhMdlqZi2YZ3gYqkIsorf72V5aalqOr2s4XRu/eR5RTVhd5pYXl7HVuHlvxlnSxtHjx6i
      vaOP/i5v3bxbvG6SiQSpdLZOSgmPx0kiGiOdq79JqFQqokkKfp+P8Mpy9YSaht3hZKuOqSQb
      cLosLC6u4bCba6a1ufwcPXqYYEcPAz2Bunl7PC2kUkmSyVT9tF4XiVicVCZXN22pVEJDxuvz
      s7ayQvWegobN7tzGC6vgdNmYnw/jdlurpmrYIu10PE6Lrx2X3YLX66leIJMFJRHDGejAY639
      QgMgSTj8PnQU6nVhZBnCSwtISh5lrYvhgdaa6eOpBGgOIqtrtAeqlxnKpLIpFMnJ6so63Z21
      0kImEcfhCeByWfH5qgtRVk2Y5AQ2Tys+5+YarBJWdwtmSUGRa3c6ZRnWwmE0LYVi6eDggY6a
      6SPxOOh21iNrdLTXEoxGMpOEsoO18Dqu3vaa+eaScSxuLy0uBwG/t4bYDdjMEkXZQ6vHWTPP
      DSTMdicqCoYaqmlYC+BsaWFlfoa5xRo13lUMZhNjZ95gbOwK9cZRyoUMJUx0dAQxqvUeRwW9
      gNPpo8Vbucm/gUSwrYNCKUtHV2fdfNta28mVCnR1t9VJC3Z3C+tLs8zOLdWo8a7mbDJy+fxZ
      Ll68RLHOSIquFciXFDo6OjBXcKtuRUHSszjcrbiruD830xnspFBM097ZVTff9tYg+VKOUHf9
      /SJWZwvJ8AIzswvUG4OUDQamxi5w8eI4+VK91CXSWY2Ojg4spuq2aJgAVpeWWVmLsFqzmdtA
      liRsDgdloPKYwk1pDWa0XIJL45fIFetvQ+zuH8SslIgl67k1OgtzCxiNMpH1eJ20ZebnljGp
      GuuxdN0yrK8ss7i6TiRc3xYSEjaHfUu2kGQVqZzl0vg4qXw9V0wi1DOI3agTS9Qv8+L8PEaT
      gUgkWielxvzsIiajRGQ9UTffeHiJ+ZV1VlfDW7KF3WGnrOsV+4W3p1blEpfHx0hkC1VTNa4F
      8Pro7Qpi24JPm1xdweJtpRRfZzWRrGkYxWBmeGSEoM9BOluvvdBJxuMkcxotjvP228oAAAfY
      SURBVNo+8urSPKuxJJIsk0nXfkGW5maIpTJIikQ6Vf9lcrR46O/uwGKvb4tMLILB4YF0nOVY
      oqYtJNnI0MgIPcEWEqnqP/oGOqlknESmgNtZeTDgGuvhRZYjcSRJJpOp/Xwri3NEEikkWSKd
      ztQpw0ZrONAXwmK117VFPhUDkwNjOcd8OFKnxVA5cHCEA70BorHqfZGGCcBisWAwmFDk+l06
      Z7AbPbpIIl9CK9Z+qbVyifDKCjndgMtWbyhXJ7wSJp1MMjMzRaZQvcXwt4d46MgIimKktydU
      M9f2UA99XR2oBittgZY6ZQCTxYrRYERV69vC5mtHza4TzeSh3sSavmGLZF7CV2HU47bErK6E
      SadSLMxOksxVz9sTCHL86GEURaGvt6dmrq3BLgZ6QqgGM22t9QcaVIsNo6piNCh1BWB2+bHo
      GcLRFEpdh0ljdWWFtUSJVn91F69hAjCaLXg8HvLZTM1aLJ+J8vLLr1MolOgdOUybt6WGYcpM
      XZkgkUqRzeU3DTtuRgfZRFfIj5YrEEvUcoN05hZWGOgLMT01UzffeDJLa2srNkv9+RSDacMW
      xWy25s9YLqZ46eSrFLUynX3DBGt2EstMXZkkkUqRyea2ZAtNMtAVakPWy0QiyZqpZ+aWGBjo
      Y2Zqsm6+sUSG1tZWHNbarSyAwWjG4/FQzmWp7cDmefGFFynJGv72PrraAzVeXo2ZiQniqRTp
      TBalhi12fR7gGslolHypTGtbO6YaHTTVYMbjtpNKpUimsvhbfTUeVMbj8xMIBDBSIF1W6wyF
      yigUCccLDA724XZYa/qShVyapfAaLb5WHLZaNarG3MwcBqMR1WRBovI8wDVS8SjZYolAWzuW
      KvMLALJiwOt1kUqlSCTS+Nv8FecBrj1bi9dHIBDAbtKJJHWcFeYBbiBhVHSWI2l6+/rwtDhq
      2qKcz7C4HMbtDeC0Vx9W3Og7zaIajKhXW/xK8wDXyMRjpIsl/K2tWGtOxqr4/S2kkykSiRTe
      Vj9qVW9Cwu3xEggE8LpUFlZytLgql7lhw6DZZITVnEKbX8ZmNdeoySQcbi8H3d5trR9x+bcS
      oULHaLHRUkqzEMlyIFT9pc4mY4yOTdLVHSQajROs6drIWC0GYrE4Zrsbi6F2Y17IxFmIlgi2
      Sthtlpq2sDtbGHK2bMsWFmeAji2MFKomC157lvlwguHe6i91PpPg/MXLdPWEiK5H6Wzz1chV
      wmYxEYvFMFgcGNVaIoRSIcXsUppQux+73VbTJbE63Aw43NuyhWLy0FvDg22YC+RpDVJKxyjp
      W19vJEnS1ieBqqxFuhWddDJJOq/jtNZ2Vcx2F339vQwMDNDqc9fNV9NyGGQj8S2MAjl9bUiF
      BMVtrD3c2vNtJ61OJpUklSvhrNm6gdHiuGqLQdr8tec4QEcjjyyZSCZqu1UANncAk54hX9J3
      +LfeWtqGCWB+apr+kQdYXZirO9y1W5RLZSQZYvEMJkPtQUVJkshlUkQia6xGYnVyljAajSws
      LGC01K7xAJanp+gceoD1pbm6XbndQiuXkWSJWCyF0VjfFvlsmkhkjfDaep2cJYxGE8uLiyjG
      +rZYm53E33eIRHix7pzPbtAQFyibjBHP5klPXAbVuGWl7ywaZ157FdXlxWC04XbUrvV0TcPp
      sLIcSXFo+EDd3N2+LvoHbKyn6nTlMgnWM1nWJy+Dsle2gHNvnKJsbsFgMON12Wum1XUNt8vO
      4so6hw8N183b4W7n3e8ZJhKvPddSzKVZS2UpZq4Ayp5sTmnIPS0ONx2tPjJ5DbtZ3aMWQOb4
      YycY7AqiKmViqdo/zqWL57F62ukK2Lk0MVsnb52l+TkWF+eJJ2qPfZusTkJtAVLZEk6rcc9a
      wwcffYKRgRAGFSLx2ut7Jscuotr99Hf6GBuvPwq0srjAwsI867Ha+RrMNrqCraTTBVwOy57Y
      onEBGyWJZGwVVWmlr2E33YzV7ubgSD2fHhRFplgoUC5uLNetjYzXYyNbVPG0OqCuYyORSa4T
      USV6tlju3cBsdTA8MlI3naLIFIoFFKmIXGW9/w0kfF4HiSx4/fUXNepI5DJxwuvynthC0ndo
      q048HsfpdFbscKzNzmHramV9Pk5Hp38nbrfr6LrOWngJTTET8HnquColzp87DSUrWJz0dHow
      m80Vh/6iS4uoPi+JlRjBjsA9EkxYJxJepoCRtkCtuQiAMhcvvIlWsKKbTAz0BivuBwBIRsKU
      zA4y0RjBjrY9sUVDWoB8Jkl4KsPabBRd1ugItu6Z77tVJEnC37q14L9aGSwGC4upHI8ePkgx
      X929KmbTzE8liC6tU0ajs7P9HtiYLeEN1F7VeQ1dA6vRymw0ycOHDkC5+pqkUiHL9NIaycg6
      JU0j1NXRcFs0pAXQyiXyhQ1DSLKCybR3nb/dYPzCWVz+DkrpdUomHz6nsWoLoJXL5Asb63Qk
      ScZkNt1Xtrg8eg67px09nyAr2Qj6nFVbAF0rk8vvrS0a0gLIiorFsj/jw+8EmUwONRkHymRj
      CXzO6hNFsqJgsWxtbf+9SCaTQzbG2ViOnARf9Rk5Sd57WzSkBbjfKRULlLUNMyqqgVw2U7UF
      uN8pFYuUr0YXUVSV4tWoEJVagP1A8/1Cu4BqMApDXkU1GG6xxX4/RW7/978Egl1ECEDQ1AgB
      CJoaIQBBU/P/AZ8288QPEUYGAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='filter' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='filter top n - parameter' width='192'>
      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
    </thumbnail>
    <thumbnail height='64' name='highlight' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='month and year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='month of year' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
